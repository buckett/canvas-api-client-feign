/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.MediaComment;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * SubmissionComment
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class SubmissionComment {

  @JsonProperty("author")

  private String author = null;

  @JsonProperty("author_id")

  private Integer authorId = null;

  @JsonProperty("author_name")

  private String authorName = null;

  @JsonProperty("comment")

  private String comment = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("edited_at")

  private OffsetDateTime editedAt = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("media_comment")

  private MediaComment mediaComment = null;
  public SubmissionComment author(String author) {
    this.author = author;
    return this;
  }

  

  /**
  * Abbreviated user object UserDisplay (see users API).
  * @return author
  **/
  @Schema(example = "{}", description = "Abbreviated user object UserDisplay (see users API).")
  public String getAuthor() {
    return author;
  }
  public void setAuthor(String author) {
    this.author = author;
  }
  public SubmissionComment authorId(Integer authorId) {
    this.authorId = authorId;
    return this;
  }

  

  /**
  * Get authorId
  * @return authorId
  **/
  @Schema(example = "134", description = "")
  public Integer getAuthorId() {
    return authorId;
  }
  public void setAuthorId(Integer authorId) {
    this.authorId = authorId;
  }
  public SubmissionComment authorName(String authorName) {
    this.authorName = authorName;
    return this;
  }

  

  /**
  * Get authorName
  * @return authorName
  **/
  @Schema(example = "Toph Beifong", description = "")
  public String getAuthorName() {
    return authorName;
  }
  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }
  public SubmissionComment comment(String comment) {
    this.comment = comment;
    return this;
  }

  

  /**
  * Get comment
  * @return comment
  **/
  @Schema(example = "Well here's the thing...", description = "")
  public String getComment() {
    return comment;
  }
  public void setComment(String comment) {
    this.comment = comment;
  }
  public SubmissionComment createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * Get createdAt
  * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public SubmissionComment editedAt(OffsetDateTime editedAt) {
    this.editedAt = editedAt;
    return this;
  }

  

  /**
  * Get editedAt
  * @return editedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getEditedAt() {
    return editedAt;
  }
  public void setEditedAt(OffsetDateTime editedAt) {
    this.editedAt = editedAt;
  }
  public SubmissionComment id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(example = "37", description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public SubmissionComment mediaComment(MediaComment mediaComment) {
    this.mediaComment = mediaComment;
    return this;
  }

  

  /**
  * Get mediaComment
  * @return mediaComment
  **/
  @Schema(description = "")
  public MediaComment getMediaComment() {
    return mediaComment;
  }
  public void setMediaComment(MediaComment mediaComment) {
    this.mediaComment = mediaComment;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionComment submissionComment = (SubmissionComment) o;
    return Objects.equals(this.author, submissionComment.author) &&
        Objects.equals(this.authorId, submissionComment.authorId) &&
        Objects.equals(this.authorName, submissionComment.authorName) &&
        Objects.equals(this.comment, submissionComment.comment) &&
        Objects.equals(this.createdAt, submissionComment.createdAt) &&
        Objects.equals(this.editedAt, submissionComment.editedAt) &&
        Objects.equals(this.id, submissionComment.id) &&
        Objects.equals(this.mediaComment, submissionComment.mediaComment);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(author, authorId, authorName, comment, createdAt, editedAt, id, mediaComment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionComment {\n");
    
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    authorId: ").append(toIndentedString(authorId)).append("\n");
    sb.append("    authorName: ").append(toIndentedString(authorName)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    editedAt: ").append(toIndentedString(editedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mediaComment: ").append(toIndentedString(mediaComment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
