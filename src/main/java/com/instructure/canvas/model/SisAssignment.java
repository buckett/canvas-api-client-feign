/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.AssignmentGroupAttributes;
import com.instructure.canvas.model.SectionAttributes;
import com.instructure.canvas.model.UserAssignmentOverrideAttributes;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Assignments that have post_to_sis enabled with other objects for convenience
 */
@Schema(description = "Assignments that have post_to_sis enabled with other objects for convenience")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class SisAssignment {

  @JsonProperty("assignment_group")

  private List<AssignmentGroupAttributes> assignmentGroup = null;

  @JsonProperty("course_id")

  private Integer courseId = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("due_at")

  private OffsetDateTime dueAt = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("include_in_final_grade")

  private Boolean includeInFinalGrade = null;

  @JsonProperty("integration_data")

  private String integrationData = null;

  @JsonProperty("integration_id")

  private String integrationId = null;

  @JsonProperty("lock_at")

  private OffsetDateTime lockAt = null;

  @JsonProperty("name")

  private String name = null;

  @JsonProperty("points_possible")

  private Integer pointsPossible = null;

  @JsonProperty("sections")

  private List<SectionAttributes> sections = null;

  @JsonProperty("submission_types")

  private List<String> submissionTypes = null;

  @JsonProperty("unlock_at")

  private OffsetDateTime unlockAt = null;

  @JsonProperty("user_overrides")

  private List<UserAssignmentOverrideAttributes> userOverrides = null;
  public SisAssignment assignmentGroup(List<AssignmentGroupAttributes> assignmentGroup) {
    this.assignmentGroup = assignmentGroup;
    return this;
  }

  public SisAssignment addAssignmentGroupItem(AssignmentGroupAttributes assignmentGroupItem) {
    if (this.assignmentGroup == null) {
      this.assignmentGroup = new ArrayList<AssignmentGroupAttributes>();
    }
    this.assignmentGroup.add(assignmentGroupItem);
    return this;
  }

  /**
  * Includes attributes of a assignment_group for convenience. For more details see Assignments API.
  * @return assignmentGroup
  **/
  @Schema(description = "Includes attributes of a assignment_group for convenience. For more details see Assignments API.")
  public List<AssignmentGroupAttributes> getAssignmentGroup() {
    return assignmentGroup;
  }
  public void setAssignmentGroup(List<AssignmentGroupAttributes> assignmentGroup) {
    this.assignmentGroup = assignmentGroup;
  }
  public SisAssignment courseId(Integer courseId) {
    this.courseId = courseId;
    return this;
  }

  

  /**
  * The unique identifier for the course.
  * @return courseId
  **/
  @Schema(example = "6", description = "The unique identifier for the course.")
  public Integer getCourseId() {
    return courseId;
  }
  public void setCourseId(Integer courseId) {
    this.courseId = courseId;
  }
  public SisAssignment createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * The time at which this assignment was originally created
  * @return createdAt
  **/
  @Schema(description = "The time at which this assignment was originally created")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public SisAssignment dueAt(OffsetDateTime dueAt) {
    this.dueAt = dueAt;
    return this;
  }

  

  /**
  * the due date for the assignment. returns null if not present. NOTE: If this assignment has assignment overrides, this field will be the due date as it applies to the user requesting information from the API.
  * @return dueAt
  **/
  @Schema(description = "the due date for the assignment. returns null if not present. NOTE: If this assignment has assignment overrides, this field will be the due date as it applies to the user requesting information from the API.")
  public OffsetDateTime getDueAt() {
    return dueAt;
  }
  public void setDueAt(OffsetDateTime dueAt) {
    this.dueAt = dueAt;
  }
  public SisAssignment id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The unique identifier for the assignment.
  * @return id
  **/
  @Schema(example = "4", description = "The unique identifier for the assignment.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public SisAssignment includeInFinalGrade(Boolean includeInFinalGrade) {
    this.includeInFinalGrade = includeInFinalGrade;
    return this;
  }

  

  /**
  * If false, the assignment will be omitted from the student&#x27;s final grade
  * @return includeInFinalGrade
  **/
  @Schema(example = "true", description = "If false, the assignment will be omitted from the student's final grade")
  public Boolean isIncludeInFinalGrade() {
    return includeInFinalGrade;
  }
  public void setIncludeInFinalGrade(Boolean includeInFinalGrade) {
    this.includeInFinalGrade = includeInFinalGrade;
  }
  public SisAssignment integrationData(String integrationData) {
    this.integrationData = integrationData;
    return this;
  }

  

  /**
  * (optional, Third Party integration data for assignment)
  * @return integrationData
  **/
  @Schema(example = "other_data", description = "(optional, Third Party integration data for assignment)")
  public String getIntegrationData() {
    return integrationData;
  }
  public void setIntegrationData(String integrationData) {
    this.integrationData = integrationData;
  }
  public SisAssignment integrationId(String integrationId) {
    this.integrationId = integrationId;
    return this;
  }

  

  /**
  * Third Party integration id for assignment
  * @return integrationId
  **/
  @Schema(example = "12341234", description = "Third Party integration id for assignment")
  public String getIntegrationId() {
    return integrationId;
  }
  public void setIntegrationId(String integrationId) {
    this.integrationId = integrationId;
  }
  public SisAssignment lockAt(OffsetDateTime lockAt) {
    this.lockAt = lockAt;
    return this;
  }

  

  /**
  * (Optional) Time at which this was/will be locked.
  * @return lockAt
  **/
  @Schema(description = "(Optional) Time at which this was/will be locked.")
  public OffsetDateTime getLockAt() {
    return lockAt;
  }
  public void setLockAt(OffsetDateTime lockAt) {
    this.lockAt = lockAt;
  }
  public SisAssignment name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * the name of the assignment
  * @return name
  **/
  @Schema(example = "some assignment", description = "the name of the assignment")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public SisAssignment pointsPossible(Integer pointsPossible) {
    this.pointsPossible = pointsPossible;
    return this;
  }

  

  /**
  * The maximum points possible for the assignment
  * @return pointsPossible
  **/
  @Schema(example = "12", description = "The maximum points possible for the assignment")
  public Integer getPointsPossible() {
    return pointsPossible;
  }
  public void setPointsPossible(Integer pointsPossible) {
    this.pointsPossible = pointsPossible;
  }
  public SisAssignment sections(List<SectionAttributes> sections) {
    this.sections = sections;
    return this;
  }

  public SisAssignment addSectionsItem(SectionAttributes sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<SectionAttributes>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

  /**
  * Includes attributes of a section for convenience. For more details see Sections API.
  * @return sections
  **/
  @Schema(description = "Includes attributes of a section for convenience. For more details see Sections API.")
  public List<SectionAttributes> getSections() {
    return sections;
  }
  public void setSections(List<SectionAttributes> sections) {
    this.sections = sections;
  }
  public SisAssignment submissionTypes(List<String> submissionTypes) {
    this.submissionTypes = submissionTypes;
    return this;
  }

  public SisAssignment addSubmissionTypesItem(String submissionTypesItem) {
    if (this.submissionTypes == null) {
      this.submissionTypes = new ArrayList<String>();
    }
    this.submissionTypes.add(submissionTypesItem);
    return this;
  }

  /**
  * the types of submissions allowed for this assignment list containing one or more of the following: &#x27;discussion_topic&#x27;, &#x27;online_quiz&#x27;, &#x27;on_paper&#x27;, &#x27;none&#x27;, &#x27;external_tool&#x27;, &#x27;online_text_entry&#x27;, &#x27;online_url&#x27;, &#x27;online_upload&#x27; &#x27;media_recording&#x27;
  * @return submissionTypes
  **/
  @Schema(example = "[online_text_entry]", description = "the types of submissions allowed for this assignment list containing one or more of the following: 'discussion_topic', 'online_quiz', 'on_paper', 'none', 'external_tool', 'online_text_entry', 'online_url', 'online_upload' 'media_recording'")
  public List<String> getSubmissionTypes() {
    return submissionTypes;
  }
  public void setSubmissionTypes(List<String> submissionTypes) {
    this.submissionTypes = submissionTypes;
  }
  public SisAssignment unlockAt(OffsetDateTime unlockAt) {
    this.unlockAt = unlockAt;
    return this;
  }

  

  /**
  * (Optional) Time at which this was/will be unlocked.
  * @return unlockAt
  **/
  @Schema(description = "(Optional) Time at which this was/will be unlocked.")
  public OffsetDateTime getUnlockAt() {
    return unlockAt;
  }
  public void setUnlockAt(OffsetDateTime unlockAt) {
    this.unlockAt = unlockAt;
  }
  public SisAssignment userOverrides(List<UserAssignmentOverrideAttributes> userOverrides) {
    this.userOverrides = userOverrides;
    return this;
  }

  public SisAssignment addUserOverridesItem(UserAssignmentOverrideAttributes userOverridesItem) {
    if (this.userOverrides == null) {
      this.userOverrides = new ArrayList<UserAssignmentOverrideAttributes>();
    }
    this.userOverrides.add(userOverridesItem);
    return this;
  }

  /**
  * Includes attributes of a user assignment overrides. For more details see Assignments API.
  * @return userOverrides
  **/
  @Schema(description = "Includes attributes of a user assignment overrides. For more details see Assignments API.")
  public List<UserAssignmentOverrideAttributes> getUserOverrides() {
    return userOverrides;
  }
  public void setUserOverrides(List<UserAssignmentOverrideAttributes> userOverrides) {
    this.userOverrides = userOverrides;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SisAssignment sisAssignment = (SisAssignment) o;
    return Objects.equals(this.assignmentGroup, sisAssignment.assignmentGroup) &&
        Objects.equals(this.courseId, sisAssignment.courseId) &&
        Objects.equals(this.createdAt, sisAssignment.createdAt) &&
        Objects.equals(this.dueAt, sisAssignment.dueAt) &&
        Objects.equals(this.id, sisAssignment.id) &&
        Objects.equals(this.includeInFinalGrade, sisAssignment.includeInFinalGrade) &&
        Objects.equals(this.integrationData, sisAssignment.integrationData) &&
        Objects.equals(this.integrationId, sisAssignment.integrationId) &&
        Objects.equals(this.lockAt, sisAssignment.lockAt) &&
        Objects.equals(this.name, sisAssignment.name) &&
        Objects.equals(this.pointsPossible, sisAssignment.pointsPossible) &&
        Objects.equals(this.sections, sisAssignment.sections) &&
        Objects.equals(this.submissionTypes, sisAssignment.submissionTypes) &&
        Objects.equals(this.unlockAt, sisAssignment.unlockAt) &&
        Objects.equals(this.userOverrides, sisAssignment.userOverrides);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(assignmentGroup, courseId, createdAt, dueAt, id, includeInFinalGrade, integrationData, integrationId, lockAt, name, pointsPossible, sections, submissionTypes, unlockAt, userOverrides);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SisAssignment {\n");
    
    sb.append("    assignmentGroup: ").append(toIndentedString(assignmentGroup)).append("\n");
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dueAt: ").append(toIndentedString(dueAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    includeInFinalGrade: ").append(toIndentedString(includeInFinalGrade)).append("\n");
    sb.append("    integrationData: ").append(toIndentedString(integrationData)).append("\n");
    sb.append("    integrationId: ").append(toIndentedString(integrationId)).append("\n");
    sb.append("    lockAt: ").append(toIndentedString(lockAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pointsPossible: ").append(toIndentedString(pointsPossible)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("    submissionTypes: ").append(toIndentedString(submissionTypes)).append("\n");
    sb.append("    unlockAt: ").append(toIndentedString(unlockAt)).append("\n");
    sb.append("    userOverrides: ").append(toIndentedString(userOverrides)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
