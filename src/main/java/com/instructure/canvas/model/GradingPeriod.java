/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * GradingPeriod
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class GradingPeriod {

  @JsonProperty("close_date")

  private OffsetDateTime closeDate = null;

  @JsonProperty("end_date")

  private OffsetDateTime endDate = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("is_closed")

  private Boolean isClosed = null;

  @JsonProperty("start_date")

  private OffsetDateTime startDate = null;

  @JsonProperty("title")

  private String title = null;

  @JsonProperty("weight")

  private Integer weight = null;
  public GradingPeriod closeDate(OffsetDateTime closeDate) {
    this.closeDate = closeDate;
    return this;
  }

  

  /**
  * Grades can only be changed before the close date of the grading period.
  * @return closeDate
  **/
  @Schema(description = "Grades can only be changed before the close date of the grading period.")
  public OffsetDateTime getCloseDate() {
    return closeDate;
  }
  public void setCloseDate(OffsetDateTime closeDate) {
    this.closeDate = closeDate;
  }
  public GradingPeriod endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  

  /**
  * The end date of the grading period.
  * @return endDate
  **/
  @Schema(required = true, description = "The end date of the grading period.")
  public OffsetDateTime getEndDate() {
    return endDate;
  }
  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }
  public GradingPeriod id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The unique identifier for the grading period.
  * @return id
  **/
  @Schema(example = "1023", required = true, description = "The unique identifier for the grading period.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public GradingPeriod isClosed(Boolean isClosed) {
    this.isClosed = isClosed;
    return this;
  }

  

  /**
  * If true, the grading period&#x27;s close_date has passed.
  * @return isClosed
  **/
  @Schema(example = "true", description = "If true, the grading period's close_date has passed.")
  public Boolean isIsClosed() {
    return isClosed;
  }
  public void setIsClosed(Boolean isClosed) {
    this.isClosed = isClosed;
  }
  public GradingPeriod startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  

  /**
  * The start date of the grading period.
  * @return startDate
  **/
  @Schema(required = true, description = "The start date of the grading period.")
  public OffsetDateTime getStartDate() {
    return startDate;
  }
  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }
  public GradingPeriod title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * The title for the grading period.
  * @return title
  **/
  @Schema(example = "First Block", description = "The title for the grading period.")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public GradingPeriod weight(Integer weight) {
    this.weight = weight;
    return this;
  }

  

  /**
  * A weight value that contributes to the overall weight of a grading period set which is used to calculate how much assignments in this period contribute to the total grade
  * @return weight
  **/
  @Schema(description = "A weight value that contributes to the overall weight of a grading period set which is used to calculate how much assignments in this period contribute to the total grade")
  public Integer getWeight() {
    return weight;
  }
  public void setWeight(Integer weight) {
    this.weight = weight;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GradingPeriod gradingPeriod = (GradingPeriod) o;
    return Objects.equals(this.closeDate, gradingPeriod.closeDate) &&
        Objects.equals(this.endDate, gradingPeriod.endDate) &&
        Objects.equals(this.id, gradingPeriod.id) &&
        Objects.equals(this.isClosed, gradingPeriod.isClosed) &&
        Objects.equals(this.startDate, gradingPeriod.startDate) &&
        Objects.equals(this.title, gradingPeriod.title) &&
        Objects.equals(this.weight, gradingPeriod.weight);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(closeDate, endDate, id, isClosed, startDate, title, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GradingPeriod {\n");
    
    sb.append("    closeDate: ").append(toIndentedString(closeDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isClosed: ").append(toIndentedString(isClosed)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
