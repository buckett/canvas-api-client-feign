/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * PeerReview
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class PeerReview {

  @JsonProperty("assessor")

  private String assessor = null;

  @JsonProperty("assessor_id")

  private Integer assessorId = null;

  @JsonProperty("asset_id")

  private Integer assetId = null;

  @JsonProperty("asset_type")

  private String assetType = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("submission_comments")

  private String submissionComments = null;

  @JsonProperty("user")

  private String user = null;

  @JsonProperty("user_id")

  private Integer userId = null;

  @JsonProperty("workflow_state")

  private String workflowState = null;
  public PeerReview assessor(String assessor) {
    this.assessor = assessor;
    return this;
  }

  

  /**
  * The User object for the assessor if the user include parameter is provided (see user API) (optional)
  * @return assessor
  **/
  @Schema(example = "User", description = "The User object for the assessor if the user include parameter is provided (see user API) (optional)")
  public String getAssessor() {
    return assessor;
  }
  public void setAssessor(String assessor) {
    this.assessor = assessor;
  }
  public PeerReview assessorId(Integer assessorId) {
    this.assessorId = assessorId;
    return this;
  }

  

  /**
  * The assessors user id
  * @return assessorId
  **/
  @Schema(example = "23", description = "The assessors user id")
  public Integer getAssessorId() {
    return assessorId;
  }
  public void setAssessorId(Integer assessorId) {
    this.assessorId = assessorId;
  }
  public PeerReview assetId(Integer assetId) {
    this.assetId = assetId;
    return this;
  }

  

  /**
  * The id for the asset associated with this Peer Review
  * @return assetId
  **/
  @Schema(example = "13", description = "The id for the asset associated with this Peer Review")
  public Integer getAssetId() {
    return assetId;
  }
  public void setAssetId(Integer assetId) {
    this.assetId = assetId;
  }
  public PeerReview assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

  

  /**
  * The type of the asset
  * @return assetType
  **/
  @Schema(example = "Submission", description = "The type of the asset")
  public String getAssetType() {
    return assetType;
  }
  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }
  public PeerReview id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The id of the Peer Review
  * @return id
  **/
  @Schema(example = "1", description = "The id of the Peer Review")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public PeerReview submissionComments(String submissionComments) {
    this.submissionComments = submissionComments;
    return this;
  }

  

  /**
  * The submission comments associated with this Peer Review if the submission_comment include parameter is provided (see submissions API) (optional)
  * @return submissionComments
  **/
  @Schema(example = "SubmissionComment", description = "The submission comments associated with this Peer Review if the submission_comment include parameter is provided (see submissions API) (optional)")
  public String getSubmissionComments() {
    return submissionComments;
  }
  public void setSubmissionComments(String submissionComments) {
    this.submissionComments = submissionComments;
  }
  public PeerReview user(String user) {
    this.user = user;
    return this;
  }

  

  /**
  * the User object for the owner of the asset if the user include parameter is provided (see user API) (optional)
  * @return user
  **/
  @Schema(example = "User", description = "the User object for the owner of the asset if the user include parameter is provided (see user API) (optional)")
  public String getUser() {
    return user;
  }
  public void setUser(String user) {
    this.user = user;
  }
  public PeerReview userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  

  /**
  * The user id for the owner of the asset
  * @return userId
  **/
  @Schema(example = "7", description = "The user id for the owner of the asset")
  public Integer getUserId() {
    return userId;
  }
  public void setUserId(Integer userId) {
    this.userId = userId;
  }
  public PeerReview workflowState(String workflowState) {
    this.workflowState = workflowState;
    return this;
  }

  

  /**
  * The state of the Peer Review, either &#x27;assigned&#x27; or &#x27;completed&#x27;
  * @return workflowState
  **/
  @Schema(example = "assigned", description = "The state of the Peer Review, either 'assigned' or 'completed'")
  public String getWorkflowState() {
    return workflowState;
  }
  public void setWorkflowState(String workflowState) {
    this.workflowState = workflowState;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeerReview peerReview = (PeerReview) o;
    return Objects.equals(this.assessor, peerReview.assessor) &&
        Objects.equals(this.assessorId, peerReview.assessorId) &&
        Objects.equals(this.assetId, peerReview.assetId) &&
        Objects.equals(this.assetType, peerReview.assetType) &&
        Objects.equals(this.id, peerReview.id) &&
        Objects.equals(this.submissionComments, peerReview.submissionComments) &&
        Objects.equals(this.user, peerReview.user) &&
        Objects.equals(this.userId, peerReview.userId) &&
        Objects.equals(this.workflowState, peerReview.workflowState);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(assessor, assessorId, assetId, assetType, id, submissionComments, user, userId, workflowState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeerReview {\n");
    
    sb.append("    assessor: ").append(toIndentedString(assessor)).append("\n");
    sb.append("    assessorId: ").append(toIndentedString(assessorId)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    submissionComments: ").append(toIndentedString(submissionComments)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    workflowState: ").append(toIndentedString(workflowState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
