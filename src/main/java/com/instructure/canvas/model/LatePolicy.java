/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * LatePolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class LatePolicy {

  @JsonProperty("course_id")

  private Integer courseId = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("late_submission_deduction")

  private BigDecimal lateSubmissionDeduction = null;

  @JsonProperty("late_submission_deduction_enabled")

  private Boolean lateSubmissionDeductionEnabled = null;
  /**
   * time interval for late submission deduction
   */
  public enum LateSubmissionIntervalEnum {
    HOUR("hour"),
    DAY("day");

    private String value;

    LateSubmissionIntervalEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LateSubmissionIntervalEnum fromValue(String text) {
      for (LateSubmissionIntervalEnum b : LateSubmissionIntervalEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }
  @JsonProperty("late_submission_interval")

  private LateSubmissionIntervalEnum lateSubmissionInterval = LateSubmissionIntervalEnum.DAY;

  @JsonProperty("late_submission_minimum_percent")

  private BigDecimal lateSubmissionMinimumPercent = null;

  @JsonProperty("late_submission_minimum_percent_enabled")

  private Boolean lateSubmissionMinimumPercentEnabled = null;

  @JsonProperty("missing_submission_deduction")

  private BigDecimal missingSubmissionDeduction = null;

  @JsonProperty("missing_submission_deduction_enabled")

  private Boolean missingSubmissionDeductionEnabled = null;

  @JsonProperty("updated_at")

  private OffsetDateTime updatedAt = null;
  public LatePolicy courseId(Integer courseId) {
    this.courseId = courseId;
    return this;
  }

  

  /**
  * the unique identifier for the course
  * @return courseId
  **/
  @Schema(example = "123", description = "the unique identifier for the course")
  public Integer getCourseId() {
    return courseId;
  }
  public void setCourseId(Integer courseId) {
    this.courseId = courseId;
  }
  public LatePolicy createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * the time at which this late policy was originally created
  * @return createdAt
  **/
  @Schema(description = "the time at which this late policy was originally created")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public LatePolicy id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * the unique identifier for the late policy
  * @return id
  **/
  @Schema(example = "123", description = "the unique identifier for the late policy")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public LatePolicy lateSubmissionDeduction(BigDecimal lateSubmissionDeduction) {
    this.lateSubmissionDeduction = lateSubmissionDeduction;
    return this;
  }

  

  /**
  * amount of percentage points to deduct per late_submission_interval
  * minimum: 0
  * maximum: 100
  * @return lateSubmissionDeduction
  **/
  @Schema(example = "12.34", description = "amount of percentage points to deduct per late_submission_interval")
  public BigDecimal getLateSubmissionDeduction() {
    return lateSubmissionDeduction;
  }
  public void setLateSubmissionDeduction(BigDecimal lateSubmissionDeduction) {
    this.lateSubmissionDeduction = lateSubmissionDeduction;
  }
  public LatePolicy lateSubmissionDeductionEnabled(Boolean lateSubmissionDeductionEnabled) {
    this.lateSubmissionDeductionEnabled = lateSubmissionDeductionEnabled;
    return this;
  }

  

  /**
  * whether to enable late submission deductions
  * @return lateSubmissionDeductionEnabled
  **/
  @Schema(example = "true", description = "whether to enable late submission deductions")
  public Boolean isLateSubmissionDeductionEnabled() {
    return lateSubmissionDeductionEnabled;
  }
  public void setLateSubmissionDeductionEnabled(Boolean lateSubmissionDeductionEnabled) {
    this.lateSubmissionDeductionEnabled = lateSubmissionDeductionEnabled;
  }
  public LatePolicy lateSubmissionInterval(LateSubmissionIntervalEnum lateSubmissionInterval) {
    this.lateSubmissionInterval = lateSubmissionInterval;
    return this;
  }

  

  /**
  * time interval for late submission deduction
  * @return lateSubmissionInterval
  **/
  @Schema(example = "hour", description = "time interval for late submission deduction")
  public LateSubmissionIntervalEnum getLateSubmissionInterval() {
    return lateSubmissionInterval;
  }
  public void setLateSubmissionInterval(LateSubmissionIntervalEnum lateSubmissionInterval) {
    this.lateSubmissionInterval = lateSubmissionInterval;
  }
  public LatePolicy lateSubmissionMinimumPercent(BigDecimal lateSubmissionMinimumPercent) {
    this.lateSubmissionMinimumPercent = lateSubmissionMinimumPercent;
    return this;
  }

  

  /**
  * the minimum score a submission can receive in percentage points
  * minimum: 0
  * maximum: 100
  * @return lateSubmissionMinimumPercent
  **/
  @Schema(example = "12.34", description = "the minimum score a submission can receive in percentage points")
  public BigDecimal getLateSubmissionMinimumPercent() {
    return lateSubmissionMinimumPercent;
  }
  public void setLateSubmissionMinimumPercent(BigDecimal lateSubmissionMinimumPercent) {
    this.lateSubmissionMinimumPercent = lateSubmissionMinimumPercent;
  }
  public LatePolicy lateSubmissionMinimumPercentEnabled(Boolean lateSubmissionMinimumPercentEnabled) {
    this.lateSubmissionMinimumPercentEnabled = lateSubmissionMinimumPercentEnabled;
    return this;
  }

  

  /**
  * whether to enable late submission minimum percent
  * @return lateSubmissionMinimumPercentEnabled
  **/
  @Schema(example = "true", description = "whether to enable late submission minimum percent")
  public Boolean isLateSubmissionMinimumPercentEnabled() {
    return lateSubmissionMinimumPercentEnabled;
  }
  public void setLateSubmissionMinimumPercentEnabled(Boolean lateSubmissionMinimumPercentEnabled) {
    this.lateSubmissionMinimumPercentEnabled = lateSubmissionMinimumPercentEnabled;
  }
  public LatePolicy missingSubmissionDeduction(BigDecimal missingSubmissionDeduction) {
    this.missingSubmissionDeduction = missingSubmissionDeduction;
    return this;
  }

  

  /**
  * amount of percentage points to deduct
  * minimum: 0
  * maximum: 100
  * @return missingSubmissionDeduction
  **/
  @Schema(example = "12.34", description = "amount of percentage points to deduct")
  public BigDecimal getMissingSubmissionDeduction() {
    return missingSubmissionDeduction;
  }
  public void setMissingSubmissionDeduction(BigDecimal missingSubmissionDeduction) {
    this.missingSubmissionDeduction = missingSubmissionDeduction;
  }
  public LatePolicy missingSubmissionDeductionEnabled(Boolean missingSubmissionDeductionEnabled) {
    this.missingSubmissionDeductionEnabled = missingSubmissionDeductionEnabled;
    return this;
  }

  

  /**
  * whether to enable missing submission deductions
  * @return missingSubmissionDeductionEnabled
  **/
  @Schema(example = "true", description = "whether to enable missing submission deductions")
  public Boolean isMissingSubmissionDeductionEnabled() {
    return missingSubmissionDeductionEnabled;
  }
  public void setMissingSubmissionDeductionEnabled(Boolean missingSubmissionDeductionEnabled) {
    this.missingSubmissionDeductionEnabled = missingSubmissionDeductionEnabled;
  }
  public LatePolicy updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  

  /**
  * the time at which this late policy was last modified in any way
  * @return updatedAt
  **/
  @Schema(description = "the time at which this late policy was last modified in any way")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LatePolicy latePolicy = (LatePolicy) o;
    return Objects.equals(this.courseId, latePolicy.courseId) &&
        Objects.equals(this.createdAt, latePolicy.createdAt) &&
        Objects.equals(this.id, latePolicy.id) &&
        Objects.equals(this.lateSubmissionDeduction, latePolicy.lateSubmissionDeduction) &&
        Objects.equals(this.lateSubmissionDeductionEnabled, latePolicy.lateSubmissionDeductionEnabled) &&
        Objects.equals(this.lateSubmissionInterval, latePolicy.lateSubmissionInterval) &&
        Objects.equals(this.lateSubmissionMinimumPercent, latePolicy.lateSubmissionMinimumPercent) &&
        Objects.equals(this.lateSubmissionMinimumPercentEnabled, latePolicy.lateSubmissionMinimumPercentEnabled) &&
        Objects.equals(this.missingSubmissionDeduction, latePolicy.missingSubmissionDeduction) &&
        Objects.equals(this.missingSubmissionDeductionEnabled, latePolicy.missingSubmissionDeductionEnabled) &&
        Objects.equals(this.updatedAt, latePolicy.updatedAt);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(courseId, createdAt, id, lateSubmissionDeduction, lateSubmissionDeductionEnabled, lateSubmissionInterval, lateSubmissionMinimumPercent, lateSubmissionMinimumPercentEnabled, missingSubmissionDeduction, missingSubmissionDeductionEnabled, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LatePolicy {\n");
    
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lateSubmissionDeduction: ").append(toIndentedString(lateSubmissionDeduction)).append("\n");
    sb.append("    lateSubmissionDeductionEnabled: ").append(toIndentedString(lateSubmissionDeductionEnabled)).append("\n");
    sb.append("    lateSubmissionInterval: ").append(toIndentedString(lateSubmissionInterval)).append("\n");
    sb.append("    lateSubmissionMinimumPercent: ").append(toIndentedString(lateSubmissionMinimumPercent)).append("\n");
    sb.append("    lateSubmissionMinimumPercentEnabled: ").append(toIndentedString(lateSubmissionMinimumPercentEnabled)).append("\n");
    sb.append("    missingSubmissionDeduction: ").append(toIndentedString(missingSubmissionDeduction)).append("\n");
    sb.append("    missingSubmissionDeductionEnabled: ").append(toIndentedString(missingSubmissionDeductionEnabled)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
