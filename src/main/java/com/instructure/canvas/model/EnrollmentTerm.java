/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * EnrollmentTerm
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class EnrollmentTerm {

  @JsonProperty("end_at")

  private OffsetDateTime endAt = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("name")

  private String name = null;

  @JsonProperty("overrides")

  private Object overrides = null;

  @JsonProperty("sis_import_id")

  private Integer sisImportId = null;

  @JsonProperty("sis_term_id")

  private String sisTermId = null;

  @JsonProperty("start_at")

  private OffsetDateTime startAt = null;

  @JsonProperty("workflow_state")

  private String workflowState = null;
  public EnrollmentTerm endAt(OffsetDateTime endAt) {
    this.endAt = endAt;
    return this;
  }

  

  /**
  * The datetime of the end of the term.
  * @return endAt
  **/
  @Schema(description = "The datetime of the end of the term.")
  public OffsetDateTime getEndAt() {
    return endAt;
  }
  public void setEndAt(OffsetDateTime endAt) {
    this.endAt = endAt;
  }
  public EnrollmentTerm id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The unique identifier for the enrollment term.
  * @return id
  **/
  @Schema(example = "1", description = "The unique identifier for the enrollment term.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public EnrollmentTerm name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * The name of the term.
  * @return name
  **/
  @Schema(example = "Spring 2014", description = "The name of the term.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public EnrollmentTerm overrides(Object overrides) {
    this.overrides = overrides;
    return this;
  }

  

  /**
  * Term date overrides for specific enrollment types
  * @return overrides
  **/
  @Schema(example = "{\"StudentEnrollment\":{\"end_at\":\"2014-05-14T05:00:00-04:0\",\"start_at\":\"2014-01-07T08:00:00-05:00\"}}", description = "Term date overrides for specific enrollment types")
  public Object getOverrides() {
    return overrides;
  }
  public void setOverrides(Object overrides) {
    this.overrides = overrides;
  }
  public EnrollmentTerm sisImportId(Integer sisImportId) {
    this.sisImportId = sisImportId;
    return this;
  }

  

  /**
  * the unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.
  * @return sisImportId
  **/
  @Schema(example = "34", description = "the unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.")
  public Integer getSisImportId() {
    return sisImportId;
  }
  public void setSisImportId(Integer sisImportId) {
    this.sisImportId = sisImportId;
  }
  public EnrollmentTerm sisTermId(String sisTermId) {
    this.sisTermId = sisTermId;
    return this;
  }

  

  /**
  * The SIS id of the term. Only included if the user has permission to view SIS information.
  * @return sisTermId
  **/
  @Schema(example = "Sp2014", description = "The SIS id of the term. Only included if the user has permission to view SIS information.")
  public String getSisTermId() {
    return sisTermId;
  }
  public void setSisTermId(String sisTermId) {
    this.sisTermId = sisTermId;
  }
  public EnrollmentTerm startAt(OffsetDateTime startAt) {
    this.startAt = startAt;
    return this;
  }

  

  /**
  * The datetime of the start of the term.
  * @return startAt
  **/
  @Schema(description = "The datetime of the start of the term.")
  public OffsetDateTime getStartAt() {
    return startAt;
  }
  public void setStartAt(OffsetDateTime startAt) {
    this.startAt = startAt;
  }
  public EnrollmentTerm workflowState(String workflowState) {
    this.workflowState = workflowState;
    return this;
  }

  

  /**
  * The state of the term. Can be &#x27;active&#x27; or &#x27;deleted&#x27;.
  * @return workflowState
  **/
  @Schema(example = "active", description = "The state of the term. Can be 'active' or 'deleted'.")
  public String getWorkflowState() {
    return workflowState;
  }
  public void setWorkflowState(String workflowState) {
    this.workflowState = workflowState;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnrollmentTerm enrollmentTerm = (EnrollmentTerm) o;
    return Objects.equals(this.endAt, enrollmentTerm.endAt) &&
        Objects.equals(this.id, enrollmentTerm.id) &&
        Objects.equals(this.name, enrollmentTerm.name) &&
        Objects.equals(this.overrides, enrollmentTerm.overrides) &&
        Objects.equals(this.sisImportId, enrollmentTerm.sisImportId) &&
        Objects.equals(this.sisTermId, enrollmentTerm.sisTermId) &&
        Objects.equals(this.startAt, enrollmentTerm.startAt) &&
        Objects.equals(this.workflowState, enrollmentTerm.workflowState);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(endAt, id, name, overrides, sisImportId, sisTermId, startAt, workflowState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnrollmentTerm {\n");
    
    sb.append("    endAt: ").append(toIndentedString(endAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    overrides: ").append(toIndentedString(overrides)).append("\n");
    sb.append("    sisImportId: ").append(toIndentedString(sisImportId)).append("\n");
    sb.append("    sisTermId: ").append(toIndentedString(sisTermId)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    workflowState: ").append(toIndentedString(workflowState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
