/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * FeatureFlag
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class FeatureFlag {

  @JsonProperty("context_id")

  private Integer contextId = null;

  @JsonProperty("context_type")

  private String contextType = null;

  @JsonProperty("feature")

  private String feature = null;

  @JsonProperty("locked")

  private Boolean locked = null;

  @JsonProperty("state")

  private String state = null;
  public FeatureFlag contextId(Integer contextId) {
    this.contextId = contextId;
    return this;
  }

  

  /**
  * The id of the object to which this flag applies (This field is not present if this FeatureFlag represents the global Canvas default)
  * @return contextId
  **/
  @Schema(example = "1038", description = "The id of the object to which this flag applies (This field is not present if this FeatureFlag represents the global Canvas default)")
  public Integer getContextId() {
    return contextId;
  }
  public void setContextId(Integer contextId) {
    this.contextId = contextId;
  }
  public FeatureFlag contextType(String contextType) {
    this.contextType = contextType;
    return this;
  }

  

  /**
  * The type of object to which this flag applies (Account, Course, or User). (This field is not present if this FeatureFlag represents the global Canvas default)
  * @return contextType
  **/
  @Schema(example = "Account", description = "The type of object to which this flag applies (Account, Course, or User). (This field is not present if this FeatureFlag represents the global Canvas default)")
  public String getContextType() {
    return contextType;
  }
  public void setContextType(String contextType) {
    this.contextType = contextType;
  }
  public FeatureFlag feature(String feature) {
    this.feature = feature;
    return this;
  }

  

  /**
  * The feature this flag controls
  * @return feature
  **/
  @Schema(example = "fancy_wickets", description = "The feature this flag controls")
  public String getFeature() {
    return feature;
  }
  public void setFeature(String feature) {
    this.feature = feature;
  }
  public FeatureFlag locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

  

  /**
  * If set, this feature flag cannot be changed in the caller&#x27;s context because the flag is set &#x27;off&#x27; or &#x27;on&#x27; in a higher context
  * @return locked
  **/
  @Schema(example = "false", description = "If set, this feature flag cannot be changed in the caller's context because the flag is set 'off' or 'on' in a higher context")
  public Boolean isLocked() {
    return locked;
  }
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }
  public FeatureFlag state(String state) {
    this.state = state;
    return this;
  }

  

  /**
  * The policy for the feature at this context.  can be &#x27;off&#x27;, &#x27;allowed&#x27;, or &#x27;on&#x27;.
  * @return state
  **/
  @Schema(example = "allowed", description = "The policy for the feature at this context.  can be 'off', 'allowed', or 'on'.")
  public String getState() {
    return state;
  }
  public void setState(String state) {
    this.state = state;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureFlag featureFlag = (FeatureFlag) o;
    return Objects.equals(this.contextId, featureFlag.contextId) &&
        Objects.equals(this.contextType, featureFlag.contextType) &&
        Objects.equals(this.feature, featureFlag.feature) &&
        Objects.equals(this.locked, featureFlag.locked) &&
        Objects.equals(this.state, featureFlag.state);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(contextId, contextType, feature, locked, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureFlag {\n");
    
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    feature: ").append(toIndentedString(feature)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
