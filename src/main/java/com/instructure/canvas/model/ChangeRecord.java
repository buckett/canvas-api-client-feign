/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Describes a learning object change propagated to associated courses from a blueprint course
 */
@Schema(description = "Describes a learning object change propagated to associated courses from a blueprint course")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class ChangeRecord {

  @JsonProperty("asset_id")

  private Long assetId = null;

  @JsonProperty("asset_name")

  private String assetName = null;

  @JsonProperty("asset_type")

  private String assetType = null;

  @JsonProperty("change_type")

  private String changeType = null;

  @JsonProperty("exceptions")

  private List<Object> exceptions = null;

  @JsonProperty("html_url")

  private String htmlUrl = null;

  @JsonProperty("locked")

  private Boolean locked = null;
  public ChangeRecord assetId(Long assetId) {
    this.assetId = assetId;
    return this;
  }

  

  /**
  * The ID of the learning object that was changed in the blueprint course.
  * @return assetId
  **/
  @Schema(example = "2", description = "The ID of the learning object that was changed in the blueprint course.")
  public Long getAssetId() {
    return assetId;
  }
  public void setAssetId(Long assetId) {
    this.assetId = assetId;
  }
  public ChangeRecord assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

  

  /**
  * The name of the learning object that was changed in the blueprint course.
  * @return assetName
  **/
  @Schema(example = "Some Assignment", description = "The name of the learning object that was changed in the blueprint course.")
  public String getAssetName() {
    return assetName;
  }
  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }
  public ChangeRecord assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

  

  /**
  * The type of the learning object that was changed in the blueprint course.  One of &#x27;assignment&#x27;, &#x27;attachment&#x27;, &#x27;discussion_topic&#x27;, &#x27;external_tool&#x27;, &#x27;quiz&#x27;, or &#x27;wiki_page&#x27;.
  * @return assetType
  **/
  @Schema(example = "assignment", description = "The type of the learning object that was changed in the blueprint course.  One of 'assignment', 'attachment', 'discussion_topic', 'external_tool', 'quiz', or 'wiki_page'.")
  public String getAssetType() {
    return assetType;
  }
  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }
  public ChangeRecord changeType(String changeType) {
    this.changeType = changeType;
    return this;
  }

  

  /**
  * The type of change; one of &#x27;created&#x27;, &#x27;updated&#x27;, &#x27;deleted&#x27;
  * @return changeType
  **/
  @Schema(example = "created", description = "The type of change; one of 'created', 'updated', 'deleted'")
  public String getChangeType() {
    return changeType;
  }
  public void setChangeType(String changeType) {
    this.changeType = changeType;
  }
  public ChangeRecord exceptions(List<Object> exceptions) {
    this.exceptions = exceptions;
    return this;
  }

  public ChangeRecord addExceptionsItem(Object exceptionsItem) {
    if (this.exceptions == null) {
      this.exceptions = new ArrayList<Object>();
    }
    this.exceptions.add(exceptionsItem);
    return this;
  }

  /**
  * A list of ExceptionRecords for linked courses that did not receive this update.
  * @return exceptions
  **/
  @Schema(example = "[{conflicting_changes=[points], course_id=101}]", description = "A list of ExceptionRecords for linked courses that did not receive this update.")
  public List<Object> getExceptions() {
    return exceptions;
  }
  public void setExceptions(List<Object> exceptions) {
    this.exceptions = exceptions;
  }
  public ChangeRecord htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  

  /**
  * The URL of the changed object
  * @return htmlUrl
  **/
  @Schema(example = "https://canvas.example.com/courses/101/assignments/2", description = "The URL of the changed object")
  public String getHtmlUrl() {
    return htmlUrl;
  }
  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }
  public ChangeRecord locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

  

  /**
  * Whether the object is locked in the blueprint
  * @return locked
  **/
  @Schema(example = "false", description = "Whether the object is locked in the blueprint")
  public Boolean isLocked() {
    return locked;
  }
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeRecord changeRecord = (ChangeRecord) o;
    return Objects.equals(this.assetId, changeRecord.assetId) &&
        Objects.equals(this.assetName, changeRecord.assetName) &&
        Objects.equals(this.assetType, changeRecord.assetType) &&
        Objects.equals(this.changeType, changeRecord.changeType) &&
        Objects.equals(this.exceptions, changeRecord.exceptions) &&
        Objects.equals(this.htmlUrl, changeRecord.htmlUrl) &&
        Objects.equals(this.locked, changeRecord.locked);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(assetId, assetName, assetType, changeType, exceptions, htmlUrl, locked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeRecord {\n");
    
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    exceptions: ").append(toIndentedString(exceptions)).append("\n");
    sb.append("    htmlUrl: ").append(toIndentedString(htmlUrl)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
