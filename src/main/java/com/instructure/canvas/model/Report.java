/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.ReportParameters;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * Report
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class Report {

  @JsonProperty("parameters")

  private ReportParameters parameters = null;

  @JsonProperty("attachment")

  private java.io.File attachment = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("current_line")

  private Integer currentLine = null;

  @JsonProperty("ended_at")

  private OffsetDateTime endedAt = null;

  @JsonProperty("file_url")

  private String fileUrl = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("progress")

  private Integer progress = null;

  @JsonProperty("report")

  private String report = null;

  @JsonProperty("started_at")

  private OffsetDateTime startedAt = null;

  @JsonProperty("status")

  private String status = null;
  public Report parameters(ReportParameters parameters) {
    this.parameters = parameters;
    return this;
  }

  

  /**
  * Get parameters
  * @return parameters
  **/
  @Schema(description = "")
  public ReportParameters getParameters() {
    return parameters;
  }
  public void setParameters(ReportParameters parameters) {
    this.parameters = parameters;
  }
  public Report attachment(java.io.File attachment) {
    this.attachment = attachment;
    return this;
  }

  

  /**
  * Get attachment
  * @return attachment
  **/
  @Schema(description = "")
  public java.io.File getAttachment() {
    return attachment;
  }
  public void setAttachment(java.io.File attachment) {
    this.attachment = attachment;
  }
  public Report createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * The date and time the report was created.
  * @return createdAt
  **/
  @Schema(description = "The date and time the report was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public Report currentLine(Integer currentLine) {
    this.currentLine = currentLine;
    return this;
  }

  

  /**
  * This is the current line count being written to the report. It updates every 1000 records.
  * @return currentLine
  **/
  @Schema(example = "12000", description = "This is the current line count being written to the report. It updates every 1000 records.")
  public Integer getCurrentLine() {
    return currentLine;
  }
  public void setCurrentLine(Integer currentLine) {
    this.currentLine = currentLine;
  }
  public Report endedAt(OffsetDateTime endedAt) {
    this.endedAt = endedAt;
    return this;
  }

  

  /**
  * The date and time the report finished processing.
  * @return endedAt
  **/
  @Schema(description = "The date and time the report finished processing.")
  public OffsetDateTime getEndedAt() {
    return endedAt;
  }
  public void setEndedAt(OffsetDateTime endedAt) {
    this.endedAt = endedAt;
  }
  public Report fileUrl(String fileUrl) {
    this.fileUrl = fileUrl;
    return this;
  }

  

  /**
  * The url to the report download.
  * @return fileUrl
  **/
  @Schema(example = "https://example.com/some/path", description = "The url to the report download.")
  public String getFileUrl() {
    return fileUrl;
  }
  public void setFileUrl(String fileUrl) {
    this.fileUrl = fileUrl;
  }
  public Report id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The unique identifier for the report.
  * @return id
  **/
  @Schema(example = "1", description = "The unique identifier for the report.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public Report progress(Integer progress) {
    this.progress = progress;
    return this;
  }

  

  /**
  * The progress of the report
  * @return progress
  **/
  @Schema(example = "100", description = "The progress of the report")
  public Integer getProgress() {
    return progress;
  }
  public void setProgress(Integer progress) {
    this.progress = progress;
  }
  public Report report(String report) {
    this.report = report;
    return this;
  }

  

  /**
  * The type of report.
  * @return report
  **/
  @Schema(example = "sis_export_csv", description = "The type of report.")
  public String getReport() {
    return report;
  }
  public void setReport(String report) {
    this.report = report;
  }
  public Report startedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  

  /**
  * The date and time the report started processing.
  * @return startedAt
  **/
  @Schema(description = "The date and time the report started processing.")
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }
  public void setStartedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }
  public Report status(String status) {
    this.status = status;
    return this;
  }

  

  /**
  * The status of the report
  * @return status
  **/
  @Schema(example = "complete", description = "The status of the report")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.parameters, report.parameters) &&
        Objects.equals(this.attachment, report.attachment) &&
        Objects.equals(this.createdAt, report.createdAt) &&
        Objects.equals(this.currentLine, report.currentLine) &&
        Objects.equals(this.endedAt, report.endedAt) &&
        Objects.equals(this.fileUrl, report.fileUrl) &&
        Objects.equals(this.id, report.id) &&
        Objects.equals(this.progress, report.progress) &&
        Objects.equals(this.report, report.report) &&
        Objects.equals(this.startedAt, report.startedAt) &&
        Objects.equals(this.status, report.status);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(parameters, attachment, createdAt, currentLine, endedAt, fileUrl, id, progress, report, startedAt, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currentLine: ").append(toIndentedString(currentLine)).append("\n");
    sb.append("    endedAt: ").append(toIndentedString(endedAt)).append("\n");
    sb.append("    fileUrl: ").append(toIndentedString(fileUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
