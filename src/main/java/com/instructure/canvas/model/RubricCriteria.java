/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.RubricRating;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * RubricCriteria
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class RubricCriteria {

  @JsonProperty("criterion_use_range")

  private Boolean criterionUseRange = null;

  @JsonProperty("description")

  private String description = null;

  @JsonProperty("id")

  private String id = null;

  @JsonProperty("learning_outcome_id")

  private String learningOutcomeId = null;

  @JsonProperty("long_description")

  private String longDescription = null;

  @JsonProperty("points")

  private Integer points = null;

  @JsonProperty("ratings")

  private List<RubricRating> ratings = null;

  @JsonProperty("vendor_guid")

  private String vendorGuid = null;
  public RubricCriteria criterionUseRange(Boolean criterionUseRange) {
    this.criterionUseRange = criterionUseRange;
    return this;
  }

  

  /**
  * Get criterionUseRange
  * @return criterionUseRange
  **/
  @Schema(example = "true", description = "")
  public Boolean isCriterionUseRange() {
    return criterionUseRange;
  }
  public void setCriterionUseRange(Boolean criterionUseRange) {
    this.criterionUseRange = criterionUseRange;
  }
  public RubricCriteria description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(example = "Criterion 1", description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public RubricCriteria id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * The id of rubric criteria.
  * @return id
  **/
  @Schema(example = "crit1", description = "The id of rubric criteria.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  public RubricCriteria learningOutcomeId(String learningOutcomeId) {
    this.learningOutcomeId = learningOutcomeId;
    return this;
  }

  

  /**
  * (Optional) The id of the learning outcome this criteria uses, if any.
  * @return learningOutcomeId
  **/
  @Schema(example = "1234", description = "(Optional) The id of the learning outcome this criteria uses, if any.")
  public String getLearningOutcomeId() {
    return learningOutcomeId;
  }
  public void setLearningOutcomeId(String learningOutcomeId) {
    this.learningOutcomeId = learningOutcomeId;
  }
  public RubricCriteria longDescription(String longDescription) {
    this.longDescription = longDescription;
    return this;
  }

  

  /**
  * Get longDescription
  * @return longDescription
  **/
  @Schema(example = "Criterion 1 more details", description = "")
  public String getLongDescription() {
    return longDescription;
  }
  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }
  public RubricCriteria points(Integer points) {
    this.points = points;
    return this;
  }

  

  /**
  * Get points
  * @return points
  **/
  @Schema(example = "10", description = "")
  public Integer getPoints() {
    return points;
  }
  public void setPoints(Integer points) {
    this.points = points;
  }
  public RubricCriteria ratings(List<RubricRating> ratings) {
    this.ratings = ratings;
    return this;
  }

  public RubricCriteria addRatingsItem(RubricRating ratingsItem) {
    if (this.ratings == null) {
      this.ratings = new ArrayList<RubricRating>();
    }
    this.ratings.add(ratingsItem);
    return this;
  }

  /**
  * Get ratings
  * @return ratings
  **/
  @Schema(description = "")
  public List<RubricRating> getRatings() {
    return ratings;
  }
  public void setRatings(List<RubricRating> ratings) {
    this.ratings = ratings;
  }
  public RubricCriteria vendorGuid(String vendorGuid) {
    this.vendorGuid = vendorGuid;
    return this;
  }

  

  /**
  * (Optional) The 3rd party vendor&#x27;s GUID for the outcome this criteria references, if any.
  * @return vendorGuid
  **/
  @Schema(example = "abdsfjasdfne3jsdfn2", description = "(Optional) The 3rd party vendor's GUID for the outcome this criteria references, if any.")
  public String getVendorGuid() {
    return vendorGuid;
  }
  public void setVendorGuid(String vendorGuid) {
    this.vendorGuid = vendorGuid;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RubricCriteria rubricCriteria = (RubricCriteria) o;
    return Objects.equals(this.criterionUseRange, rubricCriteria.criterionUseRange) &&
        Objects.equals(this.description, rubricCriteria.description) &&
        Objects.equals(this.id, rubricCriteria.id) &&
        Objects.equals(this.learningOutcomeId, rubricCriteria.learningOutcomeId) &&
        Objects.equals(this.longDescription, rubricCriteria.longDescription) &&
        Objects.equals(this.points, rubricCriteria.points) &&
        Objects.equals(this.ratings, rubricCriteria.ratings) &&
        Objects.equals(this.vendorGuid, rubricCriteria.vendorGuid);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(criterionUseRange, description, id, learningOutcomeId, longDescription, points, ratings, vendorGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RubricCriteria {\n");
    
    sb.append("    criterionUseRange: ").append(toIndentedString(criterionUseRange)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    learningOutcomeId: ").append(toIndentedString(learningOutcomeId)).append("\n");
    sb.append("    longDescription: ").append(toIndentedString(longDescription)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    ratings: ").append(toIndentedString(ratings)).append("\n");
    sb.append("    vendorGuid: ").append(toIndentedString(vendorGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
