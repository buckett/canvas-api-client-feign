/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ConversationParticipant
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class ConversationParticipant {

  @JsonProperty("avatar_url")

  private String avatarUrl = null;

  @JsonProperty("full_name")

  private String fullName = null;

  @JsonProperty("id")

  private Long id = null;

  @JsonProperty("name")

  private String name = null;
  public ConversationParticipant avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  

  /**
  * If requested, this field will be included and contain a url to retrieve the user&#x27;s avatar.
  * @return avatarUrl
  **/
  @Schema(example = "https://canvas.instructure.com/images/messages/avatar-50.png", description = "If requested, this field will be included and contain a url to retrieve the user's avatar.")
  public String getAvatarUrl() {
    return avatarUrl;
  }
  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }
  public ConversationParticipant fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  

  /**
  * The full name of the user.
  * @return fullName
  **/
  @Schema(example = "Sheldon Cooper", description = "The full name of the user.")
  public String getFullName() {
    return fullName;
  }
  public void setFullName(String fullName) {
    this.fullName = fullName;
  }
  public ConversationParticipant id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * The user ID for the participant.
  * @return id
  **/
  @Schema(example = "2", description = "The user ID for the participant.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public ConversationParticipant name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * A short name the user has selected, for use in conversations or other less formal places through the site.
  * @return name
  **/
  @Schema(example = "Shelly", description = "A short name the user has selected, for use in conversations or other less formal places through the site.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationParticipant conversationParticipant = (ConversationParticipant) o;
    return Objects.equals(this.avatarUrl, conversationParticipant.avatarUrl) &&
        Objects.equals(this.fullName, conversationParticipant.fullName) &&
        Objects.equals(this.id, conversationParticipant.id) &&
        Objects.equals(this.name, conversationParticipant.name);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(avatarUrl, fullName, id, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationParticipant {\n");
    
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
