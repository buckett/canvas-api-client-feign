/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.CompletionRequirement;
import com.instructure.canvas.model.ContentDetails;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ModuleItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class ModuleItem {

  @JsonProperty("completion_requirement")

  private CompletionRequirement completionRequirement = null;

  @JsonProperty("content_details")

  private ContentDetails contentDetails = null;

  @JsonProperty("content_id")

  private Integer contentId = null;

  @JsonProperty("external_url")

  private String externalUrl = null;

  @JsonProperty("html_url")

  private String htmlUrl = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("indent")

  private Integer indent = null;

  @JsonProperty("module_id")

  private Integer moduleId = null;

  @JsonProperty("new_tab")

  private Boolean newTab = null;

  @JsonProperty("page_url")

  private String pageUrl = null;

  @JsonProperty("position")

  private Integer position = null;

  @JsonProperty("published")

  private Boolean published = null;

  @JsonProperty("title")

  private String title = null;

  @JsonProperty("type")

  private String type = null;

  @JsonProperty("url")

  private String url = null;
  public ModuleItem completionRequirement(CompletionRequirement completionRequirement) {
    this.completionRequirement = completionRequirement;
    return this;
  }

  

  /**
  * Get completionRequirement
  * @return completionRequirement
  **/
  @Schema(description = "")
  public CompletionRequirement getCompletionRequirement() {
    return completionRequirement;
  }
  public void setCompletionRequirement(CompletionRequirement completionRequirement) {
    this.completionRequirement = completionRequirement;
  }
  public ModuleItem contentDetails(ContentDetails contentDetails) {
    this.contentDetails = contentDetails;
    return this;
  }

  

  /**
  * Get contentDetails
  * @return contentDetails
  **/
  @Schema(description = "")
  public ContentDetails getContentDetails() {
    return contentDetails;
  }
  public void setContentDetails(ContentDetails contentDetails) {
    this.contentDetails = contentDetails;
  }
  public ModuleItem contentId(Integer contentId) {
    this.contentId = contentId;
    return this;
  }

  

  /**
  * the id of the object referred to applies to &#x27;File&#x27;, &#x27;Discussion&#x27;, &#x27;Assignment&#x27;, &#x27;Quiz&#x27;, &#x27;ExternalTool&#x27; types
  * @return contentId
  **/
  @Schema(example = "1337", description = "the id of the object referred to applies to 'File', 'Discussion', 'Assignment', 'Quiz', 'ExternalTool' types")
  public Integer getContentId() {
    return contentId;
  }
  public void setContentId(Integer contentId) {
    this.contentId = contentId;
  }
  public ModuleItem externalUrl(String externalUrl) {
    this.externalUrl = externalUrl;
    return this;
  }

  

  /**
  * (only for &#x27;ExternalUrl&#x27; and &#x27;ExternalTool&#x27; types) external url that the item points to
  * @return externalUrl
  **/
  @Schema(example = "https://www.example.com/externalurl", description = "(only for 'ExternalUrl' and 'ExternalTool' types) external url that the item points to")
  public String getExternalUrl() {
    return externalUrl;
  }
  public void setExternalUrl(String externalUrl) {
    this.externalUrl = externalUrl;
  }
  public ModuleItem htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  

  /**
  * link to the item in Canvas
  * @return htmlUrl
  **/
  @Schema(example = "https://canvas.example.edu/courses/222/modules/items/768", description = "link to the item in Canvas")
  public String getHtmlUrl() {
    return htmlUrl;
  }
  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }
  public ModuleItem id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * the unique identifier for the module item
  * @return id
  **/
  @Schema(example = "768", description = "the unique identifier for the module item")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public ModuleItem indent(Integer indent) {
    this.indent = indent;
    return this;
  }

  

  /**
  * 0-based indent level; module items may be indented to show a hierarchy
  * @return indent
  **/
  @Schema(example = "0", description = "0-based indent level; module items may be indented to show a hierarchy")
  public Integer getIndent() {
    return indent;
  }
  public void setIndent(Integer indent) {
    this.indent = indent;
  }
  public ModuleItem moduleId(Integer moduleId) {
    this.moduleId = moduleId;
    return this;
  }

  

  /**
  * the id of the Module this item appears in
  * @return moduleId
  **/
  @Schema(example = "123", description = "the id of the Module this item appears in")
  public Integer getModuleId() {
    return moduleId;
  }
  public void setModuleId(Integer moduleId) {
    this.moduleId = moduleId;
  }
  public ModuleItem newTab(Boolean newTab) {
    this.newTab = newTab;
    return this;
  }

  

  /**
  * (only for &#x27;ExternalTool&#x27; type) whether the external tool opens in a new tab
  * @return newTab
  **/
  @Schema(example = "false", description = "(only for 'ExternalTool' type) whether the external tool opens in a new tab")
  public Boolean isNewTab() {
    return newTab;
  }
  public void setNewTab(Boolean newTab) {
    this.newTab = newTab;
  }
  public ModuleItem pageUrl(String pageUrl) {
    this.pageUrl = pageUrl;
    return this;
  }

  

  /**
  * (only for &#x27;Page&#x27; type) unique locator for the linked wiki page
  * @return pageUrl
  **/
  @Schema(example = "my-page-title", description = "(only for 'Page' type) unique locator for the linked wiki page")
  public String getPageUrl() {
    return pageUrl;
  }
  public void setPageUrl(String pageUrl) {
    this.pageUrl = pageUrl;
  }
  public ModuleItem position(Integer position) {
    this.position = position;
    return this;
  }

  

  /**
  * the position of this item in the module (1-based)
  * @return position
  **/
  @Schema(example = "1", description = "the position of this item in the module (1-based)")
  public Integer getPosition() {
    return position;
  }
  public void setPosition(Integer position) {
    this.position = position;
  }
  public ModuleItem published(Boolean published) {
    this.published = published;
    return this;
  }

  

  /**
  * (Optional) Whether this module item is published. This field is present only if the caller has permission to view unpublished items.
  * @return published
  **/
  @Schema(example = "true", description = "(Optional) Whether this module item is published. This field is present only if the caller has permission to view unpublished items.")
  public Boolean isPublished() {
    return published;
  }
  public void setPublished(Boolean published) {
    this.published = published;
  }
  public ModuleItem title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * the title of this item
  * @return title
  **/
  @Schema(example = "Square Roots: Irrational numbers or boxy vegetables?", description = "the title of this item")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public ModuleItem type(String type) {
    this.type = type;
    return this;
  }

  

  /**
  * the type of object referred to one of &#x27;File&#x27;, &#x27;Page&#x27;, &#x27;Discussion&#x27;, &#x27;Assignment&#x27;, &#x27;Quiz&#x27;, &#x27;SubHeader&#x27;, &#x27;ExternalUrl&#x27;, &#x27;ExternalTool&#x27;
  * @return type
  **/
  @Schema(example = "Assignment", description = "the type of object referred to one of 'File', 'Page', 'Discussion', 'Assignment', 'Quiz', 'SubHeader', 'ExternalUrl', 'ExternalTool'")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
  public ModuleItem url(String url) {
    this.url = url;
    return this;
  }

  

  /**
  * (Optional) link to the Canvas API object, if applicable
  * @return url
  **/
  @Schema(example = "https://canvas.example.edu/api/v1/courses/222/assignments/987", description = "(Optional) link to the Canvas API object, if applicable")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleItem moduleItem = (ModuleItem) o;
    return Objects.equals(this.completionRequirement, moduleItem.completionRequirement) &&
        Objects.equals(this.contentDetails, moduleItem.contentDetails) &&
        Objects.equals(this.contentId, moduleItem.contentId) &&
        Objects.equals(this.externalUrl, moduleItem.externalUrl) &&
        Objects.equals(this.htmlUrl, moduleItem.htmlUrl) &&
        Objects.equals(this.id, moduleItem.id) &&
        Objects.equals(this.indent, moduleItem.indent) &&
        Objects.equals(this.moduleId, moduleItem.moduleId) &&
        Objects.equals(this.newTab, moduleItem.newTab) &&
        Objects.equals(this.pageUrl, moduleItem.pageUrl) &&
        Objects.equals(this.position, moduleItem.position) &&
        Objects.equals(this.published, moduleItem.published) &&
        Objects.equals(this.title, moduleItem.title) &&
        Objects.equals(this.type, moduleItem.type) &&
        Objects.equals(this.url, moduleItem.url);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(completionRequirement, contentDetails, contentId, externalUrl, htmlUrl, id, indent, moduleId, newTab, pageUrl, position, published, title, type, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleItem {\n");
    
    sb.append("    completionRequirement: ").append(toIndentedString(completionRequirement)).append("\n");
    sb.append("    contentDetails: ").append(toIndentedString(contentDetails)).append("\n");
    sb.append("    contentId: ").append(toIndentedString(contentId)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    htmlUrl: ").append(toIndentedString(htmlUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    indent: ").append(toIndentedString(indent)).append("\n");
    sb.append("    moduleId: ").append(toIndentedString(moduleId)).append("\n");
    sb.append("    newTab: ").append(toIndentedString(newTab)).append("\n");
    sb.append("    pageUrl: ").append(toIndentedString(pageUrl)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
