/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.Module;
import com.instructure.canvas.model.ModuleItemSequenceNode;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * ModuleItemSequence
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class ModuleItemSequence {

  @JsonProperty("items")

  private List<ModuleItemSequenceNode> items = null;

  @JsonProperty("modules")

  private List<Module> modules = null;
  public ModuleItemSequence items(List<ModuleItemSequenceNode> items) {
    this.items = items;
    return this;
  }

  public ModuleItemSequence addItemsItem(ModuleItemSequenceNode itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<ModuleItemSequenceNode>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
  * an array containing one ModuleItemSequenceNode for each appearence of the asset in the module sequence (up to 10 total)
  * @return items
  **/
  @Schema(example = "[{current={id=768, module_id=123, title=A lonely page, type=Page}, mastery_path={assignment_sets=[], awaiting_choice=false, choose_url=/courses/11/modules/items/9/choose, locked=true, modules_tab_disabled=false, modules_url=/courses/11/modules, still_processing=false}, next={id=769, module_id=127, title=Project 1, type=Assignment}}]", description = "an array containing one ModuleItemSequenceNode for each appearence of the asset in the module sequence (up to 10 total)")
  public List<ModuleItemSequenceNode> getItems() {
    return items;
  }
  public void setItems(List<ModuleItemSequenceNode> items) {
    this.items = items;
  }
  public ModuleItemSequence modules(List<Module> modules) {
    this.modules = modules;
    return this;
  }

  public ModuleItemSequence addModulesItem(Module modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<Module>();
    }
    this.modules.add(modulesItem);
    return this;
  }

  /**
  * an array containing each Module referenced above
  * @return modules
  **/
  @Schema(example = "[{id=123, name=Overview}, {id=127, name=Imaginary Numbers}]", description = "an array containing each Module referenced above")
  public List<Module> getModules() {
    return modules;
  }
  public void setModules(List<Module> modules) {
    this.modules = modules;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleItemSequence moduleItemSequence = (ModuleItemSequence) o;
    return Objects.equals(this.items, moduleItemSequence.items) &&
        Objects.equals(this.modules, moduleItemSequence.modules);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(items, modules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleItemSequence {\n");
    
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
