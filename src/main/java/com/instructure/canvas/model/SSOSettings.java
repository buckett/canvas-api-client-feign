/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Settings that are applicable across an account&#x27;s authentication configuration, even if there are multiple individual providers
 */
@Schema(description = "Settings that are applicable across an account's authentication configuration, even if there are multiple individual providers")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class SSOSettings {

  @JsonProperty("auth_discovery_url")

  private String authDiscoveryUrl = null;

  @JsonProperty("change_password_url")

  private String changePasswordUrl = null;

  @JsonProperty("login_handle_name")

  private String loginHandleName = null;

  @JsonProperty("unknown_user_url")

  private String unknownUserUrl = null;
  public SSOSettings authDiscoveryUrl(String authDiscoveryUrl) {
    this.authDiscoveryUrl = authDiscoveryUrl;
    return this;
  }

  

  /**
  * If a discovery url is set, canvas will forward all users to that URL when they need to be authenticated. That page will need to then help the user figure out where they need to go to log in. If no discovery url is configured, the first configuration will be used to attempt to authenticate the user.
  * @return authDiscoveryUrl
  **/
  @Schema(example = "https://example.com/which_account", description = "If a discovery url is set, canvas will forward all users to that URL when they need to be authenticated. That page will need to then help the user figure out where they need to go to log in. If no discovery url is configured, the first configuration will be used to attempt to authenticate the user.")
  public String getAuthDiscoveryUrl() {
    return authDiscoveryUrl;
  }
  public void setAuthDiscoveryUrl(String authDiscoveryUrl) {
    this.authDiscoveryUrl = authDiscoveryUrl;
  }
  public SSOSettings changePasswordUrl(String changePasswordUrl) {
    this.changePasswordUrl = changePasswordUrl;
    return this;
  }

  

  /**
  * The url to redirect users to for password resets. Leave blank for default Canvas behavior
  * @return changePasswordUrl
  **/
  @Schema(example = "https://example.com/reset_password", description = "The url to redirect users to for password resets. Leave blank for default Canvas behavior")
  public String getChangePasswordUrl() {
    return changePasswordUrl;
  }
  public void setChangePasswordUrl(String changePasswordUrl) {
    this.changePasswordUrl = changePasswordUrl;
  }
  public SSOSettings loginHandleName(String loginHandleName) {
    this.loginHandleName = loginHandleName;
    return this;
  }

  

  /**
  * The label used for unique login identifiers.
  * @return loginHandleName
  **/
  @Schema(example = "Username", description = "The label used for unique login identifiers.")
  public String getLoginHandleName() {
    return loginHandleName;
  }
  public void setLoginHandleName(String loginHandleName) {
    this.loginHandleName = loginHandleName;
  }
  public SSOSettings unknownUserUrl(String unknownUserUrl) {
    this.unknownUserUrl = unknownUserUrl;
    return this;
  }

  

  /**
  * If an unknown user url is set, Canvas will forward to that url when a service authenticates a user, but that user does not exist in Canvas. The default behavior is to present an error.
  * @return unknownUserUrl
  **/
  @Schema(example = "https://example.com/register_for_canvas", description = "If an unknown user url is set, Canvas will forward to that url when a service authenticates a user, but that user does not exist in Canvas. The default behavior is to present an error.")
  public String getUnknownUserUrl() {
    return unknownUserUrl;
  }
  public void setUnknownUserUrl(String unknownUserUrl) {
    this.unknownUserUrl = unknownUserUrl;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SSOSettings ssOSettings = (SSOSettings) o;
    return Objects.equals(this.authDiscoveryUrl, ssOSettings.authDiscoveryUrl) &&
        Objects.equals(this.changePasswordUrl, ssOSettings.changePasswordUrl) &&
        Objects.equals(this.loginHandleName, ssOSettings.loginHandleName) &&
        Objects.equals(this.unknownUserUrl, ssOSettings.unknownUserUrl);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(authDiscoveryUrl, changePasswordUrl, loginHandleName, unknownUserUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SSOSettings {\n");
    
    sb.append("    authDiscoveryUrl: ").append(toIndentedString(authDiscoveryUrl)).append("\n");
    sb.append("    changePasswordUrl: ").append(toIndentedString(changePasswordUrl)).append("\n");
    sb.append("    loginHandleName: ").append(toIndentedString(loginHandleName)).append("\n");
    sb.append("    unknownUserUrl: ").append(toIndentedString(unknownUserUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
