/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * CommMessage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class CommMessage {

  @JsonProperty("body")

  private String body = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("from")

  private String from = null;

  @JsonProperty("from_name")

  private String fromName = null;

  @JsonProperty("html_body")

  private String htmlBody = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("reply_to")

  private String replyTo = null;

  @JsonProperty("sent_at")

  private OffsetDateTime sentAt = null;

  @JsonProperty("subject")

  private String subject = null;

  @JsonProperty("to")

  private String to = null;

  @JsonProperty("workflow_state")

  private String workflowState = null;
  public CommMessage body(String body) {
    this.body = body;
    return this;
  }

  

  /**
  * The plain text body of the message
  * @return body
  **/
  @Schema(example = "This is the body of the message", description = "The plain text body of the message")
  public String getBody() {
    return body;
  }
  public void setBody(String body) {
    this.body = body;
  }
  public CommMessage createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * The date and time this message was created
  * @return createdAt
  **/
  @Schema(description = "The date and time this message was created")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public CommMessage from(String from) {
    this.from = from;
    return this;
  }

  

  /**
  * The address that was put in the &#x27;from&#x27; field of the message
  * @return from
  **/
  @Schema(example = "notifications@example.com", description = "The address that was put in the 'from' field of the message")
  public String getFrom() {
    return from;
  }
  public void setFrom(String from) {
    this.from = from;
  }
  public CommMessage fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

  

  /**
  * The display name for the from address
  * @return fromName
  **/
  @Schema(example = "Instructure Canvas", description = "The display name for the from address")
  public String getFromName() {
    return fromName;
  }
  public void setFromName(String fromName) {
    this.fromName = fromName;
  }
  public CommMessage htmlBody(String htmlBody) {
    this.htmlBody = htmlBody;
    return this;
  }

  

  /**
  * The HTML body of the message.
  * @return htmlBody
  **/
  @Schema(example = "<html><body>This is the body of the message</body></html>", description = "The HTML body of the message.")
  public String getHtmlBody() {
    return htmlBody;
  }
  public void setHtmlBody(String htmlBody) {
    this.htmlBody = htmlBody;
  }
  public CommMessage id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The ID of the CommMessage.
  * @return id
  **/
  @Schema(example = "42", description = "The ID of the CommMessage.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public CommMessage replyTo(String replyTo) {
    this.replyTo = replyTo;
    return this;
  }

  

  /**
  * The reply_to header of the message
  * @return replyTo
  **/
  @Schema(example = "notifications+specialdata@example.com", description = "The reply_to header of the message")
  public String getReplyTo() {
    return replyTo;
  }
  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }
  public CommMessage sentAt(OffsetDateTime sentAt) {
    this.sentAt = sentAt;
    return this;
  }

  

  /**
  * The date and time this message was sent
  * @return sentAt
  **/
  @Schema(description = "The date and time this message was sent")
  public OffsetDateTime getSentAt() {
    return sentAt;
  }
  public void setSentAt(OffsetDateTime sentAt) {
    this.sentAt = sentAt;
  }
  public CommMessage subject(String subject) {
    this.subject = subject;
    return this;
  }

  

  /**
  * The message subject
  * @return subject
  **/
  @Schema(example = "example subject line", description = "The message subject")
  public String getSubject() {
    return subject;
  }
  public void setSubject(String subject) {
    this.subject = subject;
  }
  public CommMessage to(String to) {
    this.to = to;
    return this;
  }

  

  /**
  * The address the message was sent to:
  * @return to
  **/
  @Schema(example = "someone@example.com", description = "The address the message was sent to:")
  public String getTo() {
    return to;
  }
  public void setTo(String to) {
    this.to = to;
  }
  public CommMessage workflowState(String workflowState) {
    this.workflowState = workflowState;
    return this;
  }

  

  /**
  * The workflow state of the message. One of &#x27;created&#x27;, &#x27;staged&#x27;, &#x27;sending&#x27;, &#x27;sent&#x27;, &#x27;bounced&#x27;, &#x27;dashboard&#x27;, &#x27;cancelled&#x27;, or &#x27;closed&#x27;
  * @return workflowState
  **/
  @Schema(example = "sent", description = "The workflow state of the message. One of 'created', 'staged', 'sending', 'sent', 'bounced', 'dashboard', 'cancelled', or 'closed'")
  public String getWorkflowState() {
    return workflowState;
  }
  public void setWorkflowState(String workflowState) {
    this.workflowState = workflowState;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommMessage commMessage = (CommMessage) o;
    return Objects.equals(this.body, commMessage.body) &&
        Objects.equals(this.createdAt, commMessage.createdAt) &&
        Objects.equals(this.from, commMessage.from) &&
        Objects.equals(this.fromName, commMessage.fromName) &&
        Objects.equals(this.htmlBody, commMessage.htmlBody) &&
        Objects.equals(this.id, commMessage.id) &&
        Objects.equals(this.replyTo, commMessage.replyTo) &&
        Objects.equals(this.sentAt, commMessage.sentAt) &&
        Objects.equals(this.subject, commMessage.subject) &&
        Objects.equals(this.to, commMessage.to) &&
        Objects.equals(this.workflowState, commMessage.workflowState);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(body, createdAt, from, fromName, htmlBody, id, replyTo, sentAt, subject, to, workflowState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommMessage {\n");
    
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    htmlBody: ").append(toIndentedString(htmlBody)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    sentAt: ").append(toIndentedString(sentAt)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    workflowState: ").append(toIndentedString(workflowState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
