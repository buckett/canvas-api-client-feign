/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.User;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * PageRevision
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class PageRevision {

  @JsonProperty("body")

  private String body = null;

  @JsonProperty("edited_by")

  private User editedBy = null;

  @JsonProperty("latest")

  private Boolean latest = null;

  @JsonProperty("revision_id")

  private Integer revisionId = null;

  @JsonProperty("title")

  private String title = null;

  @JsonProperty("updated_at")

  private OffsetDateTime updatedAt = null;

  @JsonProperty("url")

  private String url = null;
  public PageRevision body(String body) {
    this.body = body;
    return this;
  }

  

  /**
  * the historic page contents
  * @return body
  **/
  @Schema(example = "<p>Old Page Content</p>", description = "the historic page contents")
  public String getBody() {
    return body;
  }
  public void setBody(String body) {
    this.body = body;
  }
  public PageRevision editedBy(User editedBy) {
    this.editedBy = editedBy;
    return this;
  }

  

  /**
  * Get editedBy
  * @return editedBy
  **/
  @Schema(description = "")
  public User getEditedBy() {
    return editedBy;
  }
  public void setEditedBy(User editedBy) {
    this.editedBy = editedBy;
  }
  public PageRevision latest(Boolean latest) {
    this.latest = latest;
    return this;
  }

  

  /**
  * whether this is the latest revision or not
  * @return latest
  **/
  @Schema(example = "true", description = "whether this is the latest revision or not")
  public Boolean isLatest() {
    return latest;
  }
  public void setLatest(Boolean latest) {
    this.latest = latest;
  }
  public PageRevision revisionId(Integer revisionId) {
    this.revisionId = revisionId;
    return this;
  }

  

  /**
  * an identifier for this revision of the page
  * @return revisionId
  **/
  @Schema(example = "7", description = "an identifier for this revision of the page")
  public Integer getRevisionId() {
    return revisionId;
  }
  public void setRevisionId(Integer revisionId) {
    this.revisionId = revisionId;
  }
  public PageRevision title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * the historic page title
  * @return title
  **/
  @Schema(example = "Old Page Title", description = "the historic page title")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public PageRevision updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  

  /**
  * the time when this revision was saved
  * @return updatedAt
  **/
  @Schema(description = "the time when this revision was saved")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }
  public PageRevision url(String url) {
    this.url = url;
    return this;
  }

  

  /**
  * the following fields are not included in the index action and may be omitted from the show action via summary&#x3D;1 the historic url of the page
  * @return url
  **/
  @Schema(example = "old-page-title", description = "the following fields are not included in the index action and may be omitted from the show action via summary=1 the historic url of the page")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageRevision pageRevision = (PageRevision) o;
    return Objects.equals(this.body, pageRevision.body) &&
        Objects.equals(this.editedBy, pageRevision.editedBy) &&
        Objects.equals(this.latest, pageRevision.latest) &&
        Objects.equals(this.revisionId, pageRevision.revisionId) &&
        Objects.equals(this.title, pageRevision.title) &&
        Objects.equals(this.updatedAt, pageRevision.updatedAt) &&
        Objects.equals(this.url, pageRevision.url);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(body, editedBy, latest, revisionId, title, updatedAt, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageRevision {\n");
    
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    editedBy: ").append(toIndentedString(editedBy)).append("\n");
    sb.append("    latest: ").append(toIndentedString(latest)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
