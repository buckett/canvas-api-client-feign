/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.RubricRating;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Outcome
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class Outcome {

  @JsonProperty("assessed")

  private Boolean assessed = null;

  @JsonProperty("calculation_int")

  private Integer calculationInt = null;

  @JsonProperty("calculation_method")

  private String calculationMethod = null;

  @JsonProperty("can_edit")

  private Boolean canEdit = null;

  @JsonProperty("can_unlink")

  private Boolean canUnlink = null;

  @JsonProperty("context_id")

  private Integer contextId = null;

  @JsonProperty("context_type")

  private String contextType = null;

  @JsonProperty("description")

  private String description = null;

  @JsonProperty("display_name")

  private String displayName = null;

  @JsonProperty("has_updateable_rubrics")

  private Boolean hasUpdateableRubrics = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("mastery_points")

  private Integer masteryPoints = null;

  @JsonProperty("points_possible")

  private Integer pointsPossible = null;

  @JsonProperty("ratings")

  private List<RubricRating> ratings = null;

  @JsonProperty("title")

  private String title = null;

  @JsonProperty("url")

  private String url = null;

  @JsonProperty("vendor_guid")

  private String vendorGuid = null;
  public Outcome assessed(Boolean assessed) {
    this.assessed = assessed;
    return this;
  }

  

  /**
  * whether this outcome has been used to assess a student
  * @return assessed
  **/
  @Schema(example = "true", description = "whether this outcome has been used to assess a student")
  public Boolean isAssessed() {
    return assessed;
  }
  public void setAssessed(Boolean assessed) {
    this.assessed = assessed;
  }
  public Outcome calculationInt(Integer calculationInt) {
    this.calculationInt = calculationInt;
    return this;
  }

  

  /**
  * this defines the variable value used by the calculation_method. included only if calculation_method uses it
  * @return calculationInt
  **/
  @Schema(example = "75", description = "this defines the variable value used by the calculation_method. included only if calculation_method uses it")
  public Integer getCalculationInt() {
    return calculationInt;
  }
  public void setCalculationInt(Integer calculationInt) {
    this.calculationInt = calculationInt;
  }
  public Outcome calculationMethod(String calculationMethod) {
    this.calculationMethod = calculationMethod;
    return this;
  }

  

  /**
  * the method used to calculate a students score
  * @return calculationMethod
  **/
  @Schema(example = "decaying_average", description = "the method used to calculate a students score")
  public String getCalculationMethod() {
    return calculationMethod;
  }
  public void setCalculationMethod(String calculationMethod) {
    this.calculationMethod = calculationMethod;
  }
  public Outcome canEdit(Boolean canEdit) {
    this.canEdit = canEdit;
    return this;
  }

  

  /**
  * whether the current user can update the outcome
  * @return canEdit
  **/
  @Schema(example = "true", description = "whether the current user can update the outcome")
  public Boolean isCanEdit() {
    return canEdit;
  }
  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }
  public Outcome canUnlink(Boolean canUnlink) {
    this.canUnlink = canUnlink;
    return this;
  }

  

  /**
  * whether the outcome can be unlinked
  * @return canUnlink
  **/
  @Schema(example = "true", description = "whether the outcome can be unlinked")
  public Boolean isCanUnlink() {
    return canUnlink;
  }
  public void setCanUnlink(Boolean canUnlink) {
    this.canUnlink = canUnlink;
  }
  public Outcome contextId(Integer contextId) {
    this.contextId = contextId;
    return this;
  }

  

  /**
  * the context owning the outcome. may be null for global outcomes
  * @return contextId
  **/
  @Schema(example = "1", description = "the context owning the outcome. may be null for global outcomes")
  public Integer getContextId() {
    return contextId;
  }
  public void setContextId(Integer contextId) {
    this.contextId = contextId;
  }
  public Outcome contextType(String contextType) {
    this.contextType = contextType;
    return this;
  }

  

  /**
  * Get contextType
  * @return contextType
  **/
  @Schema(example = "Account", description = "")
  public String getContextType() {
    return contextType;
  }
  public void setContextType(String contextType) {
    this.contextType = contextType;
  }
  public Outcome description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * description of the outcome. omitted in the abbreviated form.
  * @return description
  **/
  @Schema(example = "Outcome description", description = "description of the outcome. omitted in the abbreviated form.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public Outcome displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  

  /**
  * Optional friendly name for reporting
  * @return displayName
  **/
  @Schema(example = "My Favorite Outcome", description = "Optional friendly name for reporting")
  public String getDisplayName() {
    return displayName;
  }
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }
  public Outcome hasUpdateableRubrics(Boolean hasUpdateableRubrics) {
    this.hasUpdateableRubrics = hasUpdateableRubrics;
    return this;
  }

  

  /**
  * whether updates to this outcome will propagate to unassessed rubrics that have imported it
  * @return hasUpdateableRubrics
  **/
  @Schema(example = "true", description = "whether updates to this outcome will propagate to unassessed rubrics that have imported it")
  public Boolean isHasUpdateableRubrics() {
    return hasUpdateableRubrics;
  }
  public void setHasUpdateableRubrics(Boolean hasUpdateableRubrics) {
    this.hasUpdateableRubrics = hasUpdateableRubrics;
  }
  public Outcome id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * the ID of the outcome
  * @return id
  **/
  @Schema(example = "1", description = "the ID of the outcome")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public Outcome masteryPoints(Integer masteryPoints) {
    this.masteryPoints = masteryPoints;
    return this;
  }

  

  /**
  * points necessary to demonstrate mastery outcomes. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.
  * @return masteryPoints
  **/
  @Schema(example = "3", description = "points necessary to demonstrate mastery outcomes. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.")
  public Integer getMasteryPoints() {
    return masteryPoints;
  }
  public void setMasteryPoints(Integer masteryPoints) {
    this.masteryPoints = masteryPoints;
  }
  public Outcome pointsPossible(Integer pointsPossible) {
    this.pointsPossible = pointsPossible;
    return this;
  }

  

  /**
  * maximum points possible. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.
  * @return pointsPossible
  **/
  @Schema(example = "5", description = "maximum points possible. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.")
  public Integer getPointsPossible() {
    return pointsPossible;
  }
  public void setPointsPossible(Integer pointsPossible) {
    this.pointsPossible = pointsPossible;
  }
  public Outcome ratings(List<RubricRating> ratings) {
    this.ratings = ratings;
    return this;
  }

  public Outcome addRatingsItem(RubricRating ratingsItem) {
    if (this.ratings == null) {
      this.ratings = new ArrayList<RubricRating>();
    }
    this.ratings.add(ratingsItem);
    return this;
  }

  /**
  * possible ratings for this outcome. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.
  * @return ratings
  **/
  @Schema(description = "possible ratings for this outcome. included only if the outcome embeds a rubric criterion. omitted in the abbreviated form.")
  public List<RubricRating> getRatings() {
    return ratings;
  }
  public void setRatings(List<RubricRating> ratings) {
    this.ratings = ratings;
  }
  public Outcome title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * title of the outcome
  * @return title
  **/
  @Schema(example = "Outcome title", description = "title of the outcome")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public Outcome url(String url) {
    this.url = url;
    return this;
  }

  

  /**
  * the URL for fetching/updating the outcome. should be treated as opaque
  * @return url
  **/
  @Schema(example = "/api/v1/outcomes/1", description = "the URL for fetching/updating the outcome. should be treated as opaque")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }
  public Outcome vendorGuid(String vendorGuid) {
    this.vendorGuid = vendorGuid;
    return this;
  }

  

  /**
  * A custom GUID for the learning standard.
  * @return vendorGuid
  **/
  @Schema(example = "customid9000", description = "A custom GUID for the learning standard.")
  public String getVendorGuid() {
    return vendorGuid;
  }
  public void setVendorGuid(String vendorGuid) {
    this.vendorGuid = vendorGuid;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Outcome outcome = (Outcome) o;
    return Objects.equals(this.assessed, outcome.assessed) &&
        Objects.equals(this.calculationInt, outcome.calculationInt) &&
        Objects.equals(this.calculationMethod, outcome.calculationMethod) &&
        Objects.equals(this.canEdit, outcome.canEdit) &&
        Objects.equals(this.canUnlink, outcome.canUnlink) &&
        Objects.equals(this.contextId, outcome.contextId) &&
        Objects.equals(this.contextType, outcome.contextType) &&
        Objects.equals(this.description, outcome.description) &&
        Objects.equals(this.displayName, outcome.displayName) &&
        Objects.equals(this.hasUpdateableRubrics, outcome.hasUpdateableRubrics) &&
        Objects.equals(this.id, outcome.id) &&
        Objects.equals(this.masteryPoints, outcome.masteryPoints) &&
        Objects.equals(this.pointsPossible, outcome.pointsPossible) &&
        Objects.equals(this.ratings, outcome.ratings) &&
        Objects.equals(this.title, outcome.title) &&
        Objects.equals(this.url, outcome.url) &&
        Objects.equals(this.vendorGuid, outcome.vendorGuid);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(assessed, calculationInt, calculationMethod, canEdit, canUnlink, contextId, contextType, description, displayName, hasUpdateableRubrics, id, masteryPoints, pointsPossible, ratings, title, url, vendorGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Outcome {\n");
    
    sb.append("    assessed: ").append(toIndentedString(assessed)).append("\n");
    sb.append("    calculationInt: ").append(toIndentedString(calculationInt)).append("\n");
    sb.append("    calculationMethod: ").append(toIndentedString(calculationMethod)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    canUnlink: ").append(toIndentedString(canUnlink)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    hasUpdateableRubrics: ").append(toIndentedString(hasUpdateableRubrics)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    masteryPoints: ").append(toIndentedString(masteryPoints)).append("\n");
    sb.append("    pointsPossible: ").append(toIndentedString(pointsPossible)).append("\n");
    sb.append("    ratings: ").append(toIndentedString(ratings)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    vendorGuid: ").append(toIndentedString(vendorGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
