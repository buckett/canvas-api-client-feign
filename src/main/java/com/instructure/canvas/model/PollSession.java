/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.PollSubmission;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * PollSession
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class PollSession {

  @JsonProperty("course_id")

  private Integer courseId = null;

  @JsonProperty("course_section_id")

  private Integer courseSectionId = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("has_public_results")

  private Boolean hasPublicResults = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("is_published")

  private Boolean isPublished = null;

  @JsonProperty("poll_id")

  private Integer pollId = null;

  @JsonProperty("poll_submissions")

  private PollSubmission pollSubmissions = null;

  @JsonProperty("results")

  private Object results = null;
  public PollSession courseId(Integer courseId) {
    this.courseId = courseId;
    return this;
  }

  

  /**
  * The id of the Course this poll session is associated with
  * @return courseId
  **/
  @Schema(example = "1111", required = true, description = "The id of the Course this poll session is associated with")
  public Integer getCourseId() {
    return courseId;
  }
  public void setCourseId(Integer courseId) {
    this.courseId = courseId;
  }
  public PollSession courseSectionId(Integer courseSectionId) {
    this.courseSectionId = courseSectionId;
    return this;
  }

  

  /**
  * The id of the Course Section this poll session is associated with
  * @return courseSectionId
  **/
  @Schema(example = "444", description = "The id of the Course Section this poll session is associated with")
  public Integer getCourseSectionId() {
    return courseSectionId;
  }
  public void setCourseSectionId(Integer courseSectionId) {
    this.courseSectionId = courseSectionId;
  }
  public PollSession createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * The time at which the poll session was created.
  * @return createdAt
  **/
  @Schema(description = "The time at which the poll session was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public PollSession hasPublicResults(Boolean hasPublicResults) {
    this.hasPublicResults = hasPublicResults;
    return this;
  }

  

  /**
  * Specifies whether the results are viewable by students.
  * @return hasPublicResults
  **/
  @Schema(example = "true", description = "Specifies whether the results are viewable by students.")
  public Boolean isHasPublicResults() {
    return hasPublicResults;
  }
  public void setHasPublicResults(Boolean hasPublicResults) {
    this.hasPublicResults = hasPublicResults;
  }
  public PollSession id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The unique identifier for the poll session.
  * @return id
  **/
  @Schema(example = "1023", required = true, description = "The unique identifier for the poll session.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public PollSession isPublished(Boolean isPublished) {
    this.isPublished = isPublished;
    return this;
  }

  

  /**
  * Specifies whether or not this poll session has been published for students to participate in.
  * @return isPublished
  **/
  @Schema(example = "true", description = "Specifies whether or not this poll session has been published for students to participate in.")
  public Boolean isIsPublished() {
    return isPublished;
  }
  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }
  public PollSession pollId(Integer pollId) {
    this.pollId = pollId;
    return this;
  }

  

  /**
  * The id of the Poll this poll session is associated with
  * @return pollId
  **/
  @Schema(example = "55", required = true, description = "The id of the Poll this poll session is associated with")
  public Integer getPollId() {
    return pollId;
  }
  public void setPollId(Integer pollId) {
    this.pollId = pollId;
  }
  public PollSession pollSubmissions(PollSubmission pollSubmissions) {
    this.pollSubmissions = pollSubmissions;
    return this;
  }

  

  /**
  * Get pollSubmissions
  * @return pollSubmissions
  **/
  @Schema(description = "")
  public PollSubmission getPollSubmissions() {
    return pollSubmissions;
  }
  public void setPollSubmissions(PollSubmission pollSubmissions) {
    this.pollSubmissions = pollSubmissions;
  }
  public PollSession results(Object results) {
    this.results = results;
    return this;
  }

  

  /**
  * The results of the submissions of the poll. Each key is the poll choice id, and the value is the count of submissions.
  * @return results
  **/
  @Schema(example = "{\"144\":10,\"145\":3,\"146\":27,\"147\":8}", description = "The results of the submissions of the poll. Each key is the poll choice id, and the value is the count of submissions.")
  public Object getResults() {
    return results;
  }
  public void setResults(Object results) {
    this.results = results;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PollSession pollSession = (PollSession) o;
    return Objects.equals(this.courseId, pollSession.courseId) &&
        Objects.equals(this.courseSectionId, pollSession.courseSectionId) &&
        Objects.equals(this.createdAt, pollSession.createdAt) &&
        Objects.equals(this.hasPublicResults, pollSession.hasPublicResults) &&
        Objects.equals(this.id, pollSession.id) &&
        Objects.equals(this.isPublished, pollSession.isPublished) &&
        Objects.equals(this.pollId, pollSession.pollId) &&
        Objects.equals(this.pollSubmissions, pollSession.pollSubmissions) &&
        Objects.equals(this.results, pollSession.results);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(courseId, courseSectionId, createdAt, hasPublicResults, id, isPublished, pollId, pollSubmissions, results);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PollSession {\n");
    
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    courseSectionId: ").append(toIndentedString(courseSectionId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    hasPublicResults: ").append(toIndentedString(hasPublicResults)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isPublished: ").append(toIndentedString(isPublished)).append("\n");
    sb.append("    pollId: ").append(toIndentedString(pollId)).append("\n");
    sb.append("    pollSubmissions: ").append(toIndentedString(pollSubmissions)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
