/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * TermsOfService
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class TermsOfService {

  @JsonProperty("account_id")

  private Integer accountId = null;

  @JsonProperty("content")

  private String content = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("passive")

  private Boolean passive = null;
  /**
   * The given type for the Terms of Service
   */
  public enum TermsTypeEnum {
    DEFAULT("default"),
    CUSTOM("custom"),
    NO_TERMS("no_terms");

    private String value;

    TermsTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TermsTypeEnum fromValue(String text) {
      for (TermsTypeEnum b : TermsTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }
  @JsonProperty("terms_type")

  private TermsTypeEnum termsType = null;
  public TermsOfService accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

  

  /**
  * The id of the root account that owns the Terms of Service
  * @return accountId
  **/
  @Schema(example = "1", description = "The id of the root account that owns the Terms of Service")
  public Integer getAccountId() {
    return accountId;
  }
  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }
  public TermsOfService content(String content) {
    this.content = content;
    return this;
  }

  

  /**
  * Content of the Terms of Service
  * @return content
  **/
  @Schema(example = "To be or not to be that is the question", description = "Content of the Terms of Service")
  public String getContent() {
    return content;
  }
  public void setContent(String content) {
    this.content = content;
  }
  public TermsOfService id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Terms Of Service id
  * @return id
  **/
  @Schema(example = "1", description = "Terms Of Service id")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public TermsOfService passive(Boolean passive) {
    this.passive = passive;
    return this;
  }

  

  /**
  * Boolean dictating if the user must accept Terms of Service
  * @return passive
  **/
  @Schema(example = "false", description = "Boolean dictating if the user must accept Terms of Service")
  public Boolean isPassive() {
    return passive;
  }
  public void setPassive(Boolean passive) {
    this.passive = passive;
  }
  public TermsOfService termsType(TermsTypeEnum termsType) {
    this.termsType = termsType;
    return this;
  }

  

  /**
  * The given type for the Terms of Service
  * @return termsType
  **/
  @Schema(example = "default", description = "The given type for the Terms of Service")
  public TermsTypeEnum getTermsType() {
    return termsType;
  }
  public void setTermsType(TermsTypeEnum termsType) {
    this.termsType = termsType;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TermsOfService termsOfService = (TermsOfService) o;
    return Objects.equals(this.accountId, termsOfService.accountId) &&
        Objects.equals(this.content, termsOfService.content) &&
        Objects.equals(this.id, termsOfService.id) &&
        Objects.equals(this.passive, termsOfService.passive) &&
        Objects.equals(this.termsType, termsOfService.termsType);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(accountId, content, id, passive, termsType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TermsOfService {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    passive: ").append(toIndentedString(passive)).append("\n");
    sb.append("    termsType: ").append(toIndentedString(termsType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
