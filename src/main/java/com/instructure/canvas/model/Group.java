/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Group
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class Group {

  @JsonProperty("avatar_url")

  private String avatarUrl = null;

  @JsonProperty("context_type")

  private String contextType = null;

  @JsonProperty("course_id")

  private Integer courseId = null;

  @JsonProperty("description")

  private String description = null;

  @JsonProperty("followed_by_user")

  private Boolean followedByUser = null;

  @JsonProperty("group_category_id")

  private Integer groupCategoryId = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("is_public")

  private Boolean isPublic = null;

  @JsonProperty("join_level")

  private String joinLevel = null;

  @JsonProperty("members_count")

  private Integer membersCount = null;

  @JsonProperty("name")

  private String name = null;

  @JsonProperty("permissions")

  private Object permissions = null;

  @JsonProperty("role")

  private String role = null;

  @JsonProperty("sis_group_id")

  private String sisGroupId = null;

  @JsonProperty("sis_import_id")

  private Integer sisImportId = null;

  @JsonProperty("storage_quota_mb")

  private Integer storageQuotaMb = null;
  public Group avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  

  /**
  * The url of the group&#x27;s avatar
  * @return avatarUrl
  **/
  @Schema(example = "https://<canvas>/files/avatar_image.png", description = "The url of the group's avatar")
  public String getAvatarUrl() {
    return avatarUrl;
  }
  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }
  public Group contextType(String contextType) {
    this.contextType = contextType;
    return this;
  }

  

  /**
  * The course or account that the group belongs to. The pattern here is that whatever the context_type is, there will be an _id field named after that type. So if instead context_type was &#x27;account&#x27;, the course_id field would be replaced by an account_id field.
  * @return contextType
  **/
  @Schema(example = "Course", description = "The course or account that the group belongs to. The pattern here is that whatever the context_type is, there will be an _id field named after that type. So if instead context_type was 'account', the course_id field would be replaced by an account_id field.")
  public String getContextType() {
    return contextType;
  }
  public void setContextType(String contextType) {
    this.contextType = contextType;
  }
  public Group courseId(Integer courseId) {
    this.courseId = courseId;
    return this;
  }

  

  /**
  * Get courseId
  * @return courseId
  **/
  @Schema(example = "3", description = "")
  public Integer getCourseId() {
    return courseId;
  }
  public void setCourseId(Integer courseId) {
    this.courseId = courseId;
  }
  public Group description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * A description of the group. This is plain text.
  * @return description
  **/
  @Schema(description = "A description of the group. This is plain text.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public Group followedByUser(Boolean followedByUser) {
    this.followedByUser = followedByUser;
    return this;
  }

  

  /**
  * Whether or not the current user is following this group.
  * @return followedByUser
  **/
  @Schema(example = "false", description = "Whether or not the current user is following this group.")
  public Boolean isFollowedByUser() {
    return followedByUser;
  }
  public void setFollowedByUser(Boolean followedByUser) {
    this.followedByUser = followedByUser;
  }
  public Group groupCategoryId(Integer groupCategoryId) {
    this.groupCategoryId = groupCategoryId;
    return this;
  }

  

  /**
  * The ID of the group&#x27;s category.
  * @return groupCategoryId
  **/
  @Schema(example = "4", description = "The ID of the group's category.")
  public Integer getGroupCategoryId() {
    return groupCategoryId;
  }
  public void setGroupCategoryId(Integer groupCategoryId) {
    this.groupCategoryId = groupCategoryId;
  }
  public Group id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The ID of the group.
  * @return id
  **/
  @Schema(example = "17", description = "The ID of the group.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public Group isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

  

  /**
  * Whether or not the group is public.  Currently only community groups can be made public.  Also, once a group has been set to public, it cannot be changed back to private.
  * @return isPublic
  **/
  @Schema(example = "false", description = "Whether or not the group is public.  Currently only community groups can be made public.  Also, once a group has been set to public, it cannot be changed back to private.")
  public Boolean isIsPublic() {
    return isPublic;
  }
  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }
  public Group joinLevel(String joinLevel) {
    this.joinLevel = joinLevel;
    return this;
  }

  

  /**
  * How people are allowed to join the group.  For all groups except for community groups, the user must share the group&#x27;s parent course or account.  For student organized or community groups, where a user can be a member of as many or few as they want, the applicable levels are &#x27;parent_context_auto_join&#x27;, &#x27;parent_context_request&#x27;, and &#x27;invitation_only&#x27;.  For class groups, where students are divided up and should only be part of one group of the category, this value will always be &#x27;invitation_only&#x27;, and is not relevant. * If &#x27;parent_context_auto_join&#x27;, anyone can join and will be automatically accepted. * If &#x27;parent_context_request&#x27;, anyone  can request to join, which must be approved by a group moderator. * If &#x27;invitation_only&#x27;, only those how have received an invitation my join the group, by accepting that invitation.
  * @return joinLevel
  **/
  @Schema(example = "invitation_only", description = "How people are allowed to join the group.  For all groups except for community groups, the user must share the group's parent course or account.  For student organized or community groups, where a user can be a member of as many or few as they want, the applicable levels are 'parent_context_auto_join', 'parent_context_request', and 'invitation_only'.  For class groups, where students are divided up and should only be part of one group of the category, this value will always be 'invitation_only', and is not relevant. * If 'parent_context_auto_join', anyone can join and will be automatically accepted. * If 'parent_context_request', anyone  can request to join, which must be approved by a group moderator. * If 'invitation_only', only those how have received an invitation my join the group, by accepting that invitation.")
  public String getJoinLevel() {
    return joinLevel;
  }
  public void setJoinLevel(String joinLevel) {
    this.joinLevel = joinLevel;
  }
  public Group membersCount(Integer membersCount) {
    this.membersCount = membersCount;
    return this;
  }

  

  /**
  * The number of members currently in the group
  * @return membersCount
  **/
  @Schema(example = "0", description = "The number of members currently in the group")
  public Integer getMembersCount() {
    return membersCount;
  }
  public void setMembersCount(Integer membersCount) {
    this.membersCount = membersCount;
  }
  public Group name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * The display name of the group.
  * @return name
  **/
  @Schema(example = "Math Group 1", description = "The display name of the group.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Group permissions(Object permissions) {
    this.permissions = permissions;
    return this;
  }

  

  /**
  * optional: the permissions the user has for the group. returned only for a single group and include[]&#x3D;permissions
  * @return permissions
  **/
  @Schema(example = "{\"create_announcement\":true,\"create_discussion_topic\":true}", description = "optional: the permissions the user has for the group. returned only for a single group and include[]=permissions")
  public Object getPermissions() {
    return permissions;
  }
  public void setPermissions(Object permissions) {
    this.permissions = permissions;
  }
  public Group role(String role) {
    this.role = role;
    return this;
  }

  

  /**
  * Certain types of groups have special role designations. Currently, these include: &#x27;communities&#x27;, &#x27;student_organized&#x27;, and &#x27;imported&#x27;. Regular course/account groups have a role of null.
  * @return role
  **/
  @Schema(description = "Certain types of groups have special role designations. Currently, these include: 'communities', 'student_organized', and 'imported'. Regular course/account groups have a role of null.")
  public String getRole() {
    return role;
  }
  public void setRole(String role) {
    this.role = role;
  }
  public Group sisGroupId(String sisGroupId) {
    this.sisGroupId = sisGroupId;
    return this;
  }

  

  /**
  * The SIS ID of the group. Only included if the user has permission to view SIS information.
  * @return sisGroupId
  **/
  @Schema(example = "group4a", description = "The SIS ID of the group. Only included if the user has permission to view SIS information.")
  public String getSisGroupId() {
    return sisGroupId;
  }
  public void setSisGroupId(String sisGroupId) {
    this.sisGroupId = sisGroupId;
  }
  public Group sisImportId(Integer sisImportId) {
    this.sisImportId = sisImportId;
    return this;
  }

  

  /**
  * The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.
  * @return sisImportId
  **/
  @Schema(example = "14", description = "The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.")
  public Integer getSisImportId() {
    return sisImportId;
  }
  public void setSisImportId(Integer sisImportId) {
    this.sisImportId = sisImportId;
  }
  public Group storageQuotaMb(Integer storageQuotaMb) {
    this.storageQuotaMb = storageQuotaMb;
    return this;
  }

  

  /**
  * the storage quota for the group, in megabytes
  * @return storageQuotaMb
  **/
  @Schema(example = "50", description = "the storage quota for the group, in megabytes")
  public Integer getStorageQuotaMb() {
    return storageQuotaMb;
  }
  public void setStorageQuotaMb(Integer storageQuotaMb) {
    this.storageQuotaMb = storageQuotaMb;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Group group = (Group) o;
    return Objects.equals(this.avatarUrl, group.avatarUrl) &&
        Objects.equals(this.contextType, group.contextType) &&
        Objects.equals(this.courseId, group.courseId) &&
        Objects.equals(this.description, group.description) &&
        Objects.equals(this.followedByUser, group.followedByUser) &&
        Objects.equals(this.groupCategoryId, group.groupCategoryId) &&
        Objects.equals(this.id, group.id) &&
        Objects.equals(this.isPublic, group.isPublic) &&
        Objects.equals(this.joinLevel, group.joinLevel) &&
        Objects.equals(this.membersCount, group.membersCount) &&
        Objects.equals(this.name, group.name) &&
        Objects.equals(this.permissions, group.permissions) &&
        Objects.equals(this.role, group.role) &&
        Objects.equals(this.sisGroupId, group.sisGroupId) &&
        Objects.equals(this.sisImportId, group.sisImportId) &&
        Objects.equals(this.storageQuotaMb, group.storageQuotaMb);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(avatarUrl, contextType, courseId, description, followedByUser, groupCategoryId, id, isPublic, joinLevel, membersCount, name, permissions, role, sisGroupId, sisImportId, storageQuotaMb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Group {\n");
    
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    followedByUser: ").append(toIndentedString(followedByUser)).append("\n");
    sb.append("    groupCategoryId: ").append(toIndentedString(groupCategoryId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    joinLevel: ").append(toIndentedString(joinLevel)).append("\n");
    sb.append("    membersCount: ").append(toIndentedString(membersCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    sisGroupId: ").append(toIndentedString(sisGroupId)).append("\n");
    sb.append("    sisImportId: ").append(toIndentedString(sisImportId)).append("\n");
    sb.append("    storageQuotaMb: ").append(toIndentedString(storageQuotaMb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
