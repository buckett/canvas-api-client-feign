/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.ModuleItem;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ModuleItemSequenceNode
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class ModuleItemSequenceNode {

  @JsonProperty("current")

  private ModuleItem current = null;

  @JsonProperty("mastery_path")

  private Object masteryPath = null;

  @JsonProperty("next")

  private ModuleItem next = null;

  @JsonProperty("prev")

  private ModuleItem prev = null;
  public ModuleItemSequenceNode current(ModuleItem current) {
    this.current = current;
    return this;
  }

  

  /**
  * Get current
  * @return current
  **/
  @Schema(description = "")
  public ModuleItem getCurrent() {
    return current;
  }
  public void setCurrent(ModuleItem current) {
    this.current = current;
  }
  public ModuleItemSequenceNode masteryPath(Object masteryPath) {
    this.masteryPath = masteryPath;
    return this;
  }

  

  /**
  * The conditional release rule for the module item, if applicable
  * @return masteryPath
  **/
  @Schema(example = "{\"assignment_sets\":[],\"awaiting_choice\":false,\"choose_url\":\"/courses/11/modules/items/9/choose\",\"locked\":true,\"modules_tab_disabled\":false,\"modules_url\":\"/courses/11/modules\",\"still_processing\":false}", description = "The conditional release rule for the module item, if applicable")
  public Object getMasteryPath() {
    return masteryPath;
  }
  public void setMasteryPath(Object masteryPath) {
    this.masteryPath = masteryPath;
  }
  public ModuleItemSequenceNode next(ModuleItem next) {
    this.next = next;
    return this;
  }

  

  /**
  * Get next
  * @return next
  **/
  @Schema(description = "")
  public ModuleItem getNext() {
    return next;
  }
  public void setNext(ModuleItem next) {
    this.next = next;
  }
  public ModuleItemSequenceNode prev(ModuleItem prev) {
    this.prev = prev;
    return this;
  }

  

  /**
  * Get prev
  * @return prev
  **/
  @Schema(description = "")
  public ModuleItem getPrev() {
    return prev;
  }
  public void setPrev(ModuleItem prev) {
    this.prev = prev;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleItemSequenceNode moduleItemSequenceNode = (ModuleItemSequenceNode) o;
    return Objects.equals(this.current, moduleItemSequenceNode.current) &&
        Objects.equals(this.masteryPath, moduleItemSequenceNode.masteryPath) &&
        Objects.equals(this.next, moduleItemSequenceNode.next) &&
        Objects.equals(this.prev, moduleItemSequenceNode.prev);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(current, masteryPath, next, prev);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleItemSequenceNode {\n");
    
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    masteryPath: ").append(toIndentedString(masteryPath)).append("\n");
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
