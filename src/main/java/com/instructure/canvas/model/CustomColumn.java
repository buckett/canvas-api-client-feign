/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CustomColumn
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class CustomColumn {

  @JsonProperty("hidden")

  private Boolean hidden = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("position")

  private Integer position = null;

  @JsonProperty("read_only")

  private Boolean readOnly = null;

  @JsonProperty("teacher_notes")

  private Boolean teacherNotes = null;

  @JsonProperty("title")

  private String title = null;
  public CustomColumn hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

  

  /**
  * won&#x27;t be displayed if hidden is true
  * @return hidden
  **/
  @Schema(example = "false", description = "won't be displayed if hidden is true")
  public Boolean isHidden() {
    return hidden;
  }
  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }
  public CustomColumn id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The ID of the custom gradebook column
  * @return id
  **/
  @Schema(example = "2", description = "The ID of the custom gradebook column")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public CustomColumn position(Integer position) {
    this.position = position;
    return this;
  }

  

  /**
  * column order
  * @return position
  **/
  @Schema(example = "1", description = "column order")
  public Integer getPosition() {
    return position;
  }
  public void setPosition(Integer position) {
    this.position = position;
  }
  public CustomColumn readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  

  /**
  * won&#x27;t be editable in the gradebook UI
  * @return readOnly
  **/
  @Schema(example = "true", description = "won't be editable in the gradebook UI")
  public Boolean isReadOnly() {
    return readOnly;
  }
  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }
  public CustomColumn teacherNotes(Boolean teacherNotes) {
    this.teacherNotes = teacherNotes;
    return this;
  }

  

  /**
  * When true, this column&#x27;s visibility will be toggled in the Gradebook when a user selects to show or hide notes
  * @return teacherNotes
  **/
  @Schema(example = "false", description = "When true, this column's visibility will be toggled in the Gradebook when a user selects to show or hide notes")
  public Boolean isTeacherNotes() {
    return teacherNotes;
  }
  public void setTeacherNotes(Boolean teacherNotes) {
    this.teacherNotes = teacherNotes;
  }
  public CustomColumn title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * header text
  * @return title
  **/
  @Schema(example = "Stuff", description = "header text")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomColumn customColumn = (CustomColumn) o;
    return Objects.equals(this.hidden, customColumn.hidden) &&
        Objects.equals(this.id, customColumn.id) &&
        Objects.equals(this.position, customColumn.position) &&
        Objects.equals(this.readOnly, customColumn.readOnly) &&
        Objects.equals(this.teacherNotes, customColumn.teacherNotes) &&
        Objects.equals(this.title, customColumn.title);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(hidden, id, position, readOnly, teacherNotes, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomColumn {\n");
    
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    teacherNotes: ").append(toIndentedString(teacherNotes)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
