/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * AuthenticationEvent
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class AuthenticationEvent {

  @JsonProperty("account_id")

  private Integer accountId = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("event_type")

  private String eventType = null;

  @JsonProperty("pseudonym_id")

  private Integer pseudonymId = null;

  @JsonProperty("user_id")

  private Integer userId = null;
  public AuthenticationEvent accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

  

  /**
  * ID of the account associated with the event. will match the account_id in the associated pseudonym.
  * @return accountId
  **/
  @Schema(example = "2319", description = "ID of the account associated with the event. will match the account_id in the associated pseudonym.")
  public Integer getAccountId() {
    return accountId;
  }
  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }
  public AuthenticationEvent createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * timestamp of the event
  * @return createdAt
  **/
  @Schema(description = "timestamp of the event")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public AuthenticationEvent eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

  

  /**
  * authentication event type (&#x27;login&#x27; or &#x27;logout&#x27;)
  * @return eventType
  **/
  @Schema(example = "login", description = "authentication event type ('login' or 'logout')")
  public String getEventType() {
    return eventType;
  }
  public void setEventType(String eventType) {
    this.eventType = eventType;
  }
  public AuthenticationEvent pseudonymId(Integer pseudonymId) {
    this.pseudonymId = pseudonymId;
    return this;
  }

  

  /**
  * ID of the pseudonym (login) associated with the event
  * @return pseudonymId
  **/
  @Schema(example = "9478", description = "ID of the pseudonym (login) associated with the event")
  public Integer getPseudonymId() {
    return pseudonymId;
  }
  public void setPseudonymId(Integer pseudonymId) {
    this.pseudonymId = pseudonymId;
  }
  public AuthenticationEvent userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  

  /**
  * ID of the user associated with the event will match the user_id in the associated pseudonym.
  * @return userId
  **/
  @Schema(example = "362", description = "ID of the user associated with the event will match the user_id in the associated pseudonym.")
  public Integer getUserId() {
    return userId;
  }
  public void setUserId(Integer userId) {
    this.userId = userId;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationEvent authenticationEvent = (AuthenticationEvent) o;
    return Objects.equals(this.accountId, authenticationEvent.accountId) &&
        Objects.equals(this.createdAt, authenticationEvent.createdAt) &&
        Objects.equals(this.eventType, authenticationEvent.eventType) &&
        Objects.equals(this.pseudonymId, authenticationEvent.pseudonymId) &&
        Objects.equals(this.userId, authenticationEvent.userId);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(accountId, createdAt, eventType, pseudonymId, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationEvent {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    pseudonymId: ").append(toIndentedString(pseudonymId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
