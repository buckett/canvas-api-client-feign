/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.Enrollment;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * A Canvas user, e.g. a student, teacher, administrator, observer, etc.
 */
@Schema(description = "A Canvas user, e.g. a student, teacher, administrator, observer, etc.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class User {

  @JsonProperty("avatar_url")

  private String avatarUrl = null;

  @JsonProperty("bio")

  private String bio = null;

  @JsonProperty("email")

  private String email = null;

  @JsonProperty("enrollments")

  private List<Enrollment> enrollments = null;

  @JsonProperty("id")

  private Long id = null;

  @JsonProperty("integration_id")

  private String integrationId = null;

  @JsonProperty("last_login")

  private OffsetDateTime lastLogin = null;

  @JsonProperty("locale")

  private String locale = null;

  @JsonProperty("login_id")

  private String loginId = null;

  @JsonProperty("name")

  private String name = null;

  @JsonProperty("short_name")

  private String shortName = null;

  @JsonProperty("sis_import_id")

  private Long sisImportId = null;

  @JsonProperty("sis_user_id")

  private String sisUserId = null;

  @JsonProperty("sortable_name")

  private String sortableName = null;

  @JsonProperty("time_zone")

  private String timeZone = null;
  public User avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  

  /**
  * If avatars are enabled, this field will be included and contain a url to retrieve the user&#x27;s avatar.
  * @return avatarUrl
  **/
  @Schema(example = "https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g", description = "If avatars are enabled, this field will be included and contain a url to retrieve the user's avatar.")
  public String getAvatarUrl() {
    return avatarUrl;
  }
  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }
  public User bio(String bio) {
    this.bio = bio;
    return this;
  }

  

  /**
  * Optional: The user&#x27;s bio.
  * @return bio
  **/
  @Schema(example = "I like the Muppets.", description = "Optional: The user's bio.")
  public String getBio() {
    return bio;
  }
  public void setBio(String bio) {
    this.bio = bio;
  }
  public User email(String email) {
    this.email = email;
    return this;
  }

  

  /**
  * Optional: This field can be requested with certain API calls, and will return the users primary email address.
  * @return email
  **/
  @Schema(example = "sheldon@caltech.example.com", description = "Optional: This field can be requested with certain API calls, and will return the users primary email address.")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }
  public User enrollments(List<Enrollment> enrollments) {
    this.enrollments = enrollments;
    return this;
  }

  public User addEnrollmentsItem(Enrollment enrollmentsItem) {
    if (this.enrollments == null) {
      this.enrollments = new ArrayList<Enrollment>();
    }
    this.enrollments.add(enrollmentsItem);
    return this;
  }

  /**
  * Optional: This field can be requested with certain API calls, and will return a list of the users active enrollments. See the List enrollments API for more details about the format of these records.
  * @return enrollments
  **/
  @Schema(description = "Optional: This field can be requested with certain API calls, and will return a list of the users active enrollments. See the List enrollments API for more details about the format of these records.")
  public List<Enrollment> getEnrollments() {
    return enrollments;
  }
  public void setEnrollments(List<Enrollment> enrollments) {
    this.enrollments = enrollments;
  }
  public User id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * The ID of the user.
  * @return id
  **/
  @Schema(example = "2", required = true, description = "The ID of the user.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public User integrationId(String integrationId) {
    this.integrationId = integrationId;
    return this;
  }

  

  /**
  * The integration_id associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.
  * @return integrationId
  **/
  @Schema(example = "ABC59802", description = "The integration_id associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.")
  public String getIntegrationId() {
    return integrationId;
  }
  public void setIntegrationId(String integrationId) {
    this.integrationId = integrationId;
  }
  public User lastLogin(OffsetDateTime lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

  

  /**
  * Optional: This field is only returned in certain API calls, and will return a timestamp representing the last time the user logged in to canvas.
  * @return lastLogin
  **/
  @Schema(description = "Optional: This field is only returned in certain API calls, and will return a timestamp representing the last time the user logged in to canvas.")
  public OffsetDateTime getLastLogin() {
    return lastLogin;
  }
  public void setLastLogin(OffsetDateTime lastLogin) {
    this.lastLogin = lastLogin;
  }
  public User locale(String locale) {
    this.locale = locale;
    return this;
  }

  

  /**
  * Optional: This field can be requested with certain API calls, and will return the users locale in RFC 5646 format.
  * @return locale
  **/
  @Schema(example = "tlh", description = "Optional: This field can be requested with certain API calls, and will return the users locale in RFC 5646 format.")
  public String getLocale() {
    return locale;
  }
  public void setLocale(String locale) {
    this.locale = locale;
  }
  public User loginId(String loginId) {
    this.loginId = loginId;
    return this;
  }

  

  /**
  * The unique login id for the user.  This is what the user uses to log in to Canvas.
  * @return loginId
  **/
  @Schema(example = "sheldon@caltech.example.com", description = "The unique login id for the user.  This is what the user uses to log in to Canvas.")
  public String getLoginId() {
    return loginId;
  }
  public void setLoginId(String loginId) {
    this.loginId = loginId;
  }
  public User name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * The name of the user.
  * @return name
  **/
  @Schema(example = "Sheldon Cooper", description = "The name of the user.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public User shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

  

  /**
  * A short name the user has selected, for use in conversations or other less formal places through the site.
  * @return shortName
  **/
  @Schema(example = "Shelly", description = "A short name the user has selected, for use in conversations or other less formal places through the site.")
  public String getShortName() {
    return shortName;
  }
  public void setShortName(String shortName) {
    this.shortName = shortName;
  }
  public User sisImportId(Long sisImportId) {
    this.sisImportId = sisImportId;
    return this;
  }

  

  /**
  * The id of the SIS import.  This field is only included if the user came from a SIS import and has permissions to manage SIS information.
  * @return sisImportId
  **/
  @Schema(example = "18", description = "The id of the SIS import.  This field is only included if the user came from a SIS import and has permissions to manage SIS information.")
  public Long getSisImportId() {
    return sisImportId;
  }
  public void setSisImportId(Long sisImportId) {
    this.sisImportId = sisImportId;
  }
  public User sisUserId(String sisUserId) {
    this.sisUserId = sisUserId;
    return this;
  }

  

  /**
  * The SIS ID associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.
  * @return sisUserId
  **/
  @Schema(example = "SHEL93921", description = "The SIS ID associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.")
  public String getSisUserId() {
    return sisUserId;
  }
  public void setSisUserId(String sisUserId) {
    this.sisUserId = sisUserId;
  }
  public User sortableName(String sortableName) {
    this.sortableName = sortableName;
    return this;
  }

  

  /**
  * The name of the user that is should be used for sorting groups of users, such as in the gradebook.
  * @return sortableName
  **/
  @Schema(example = "Cooper, Sheldon", description = "The name of the user that is should be used for sorting groups of users, such as in the gradebook.")
  public String getSortableName() {
    return sortableName;
  }
  public void setSortableName(String sortableName) {
    this.sortableName = sortableName;
  }
  public User timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  

  /**
  * Optional: This field is only returned in certain API calls, and will return the IANA time zone name of the user&#x27;s preferred timezone.
  * @return timeZone
  **/
  @Schema(example = "America/Denver", description = "Optional: This field is only returned in certain API calls, and will return the IANA time zone name of the user's preferred timezone.")
  public String getTimeZone() {
    return timeZone;
  }
  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.avatarUrl, user.avatarUrl) &&
        Objects.equals(this.bio, user.bio) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.enrollments, user.enrollments) &&
        Objects.equals(this.id, user.id) &&
        Objects.equals(this.integrationId, user.integrationId) &&
        Objects.equals(this.lastLogin, user.lastLogin) &&
        Objects.equals(this.locale, user.locale) &&
        Objects.equals(this.loginId, user.loginId) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.shortName, user.shortName) &&
        Objects.equals(this.sisImportId, user.sisImportId) &&
        Objects.equals(this.sisUserId, user.sisUserId) &&
        Objects.equals(this.sortableName, user.sortableName) &&
        Objects.equals(this.timeZone, user.timeZone);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(avatarUrl, bio, email, enrollments, id, integrationId, lastLogin, locale, loginId, name, shortName, sisImportId, sisUserId, sortableName, timeZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    bio: ").append(toIndentedString(bio)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    enrollments: ").append(toIndentedString(enrollments)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    integrationId: ").append(toIndentedString(integrationId)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    loginId: ").append(toIndentedString(loginId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    sisImportId: ").append(toIndentedString(sisImportId)).append("\n");
    sb.append("    sisUserId: ").append(toIndentedString(sisUserId)).append("\n");
    sb.append("    sortableName: ").append(toIndentedString(sortableName)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
