/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * GroupMembership
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class GroupMembership {

  @JsonProperty("group_id")

  private Integer groupId = null;

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("just_created")

  private Boolean justCreated = null;

  @JsonProperty("moderator")

  private Boolean moderator = null;

  @JsonProperty("sis_import_id")

  private Integer sisImportId = null;

  @JsonProperty("user_id")

  private Integer userId = null;

  @JsonProperty("workflow_state")

  private String workflowState = null;
  public GroupMembership groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

  

  /**
  * The id of the group object to which the membership belongs
  * @return groupId
  **/
  @Schema(example = "17", description = "The id of the group object to which the membership belongs")
  public Integer getGroupId() {
    return groupId;
  }
  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }
  public GroupMembership id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * The id of the membership object
  * @return id
  **/
  @Schema(example = "92", description = "The id of the membership object")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public GroupMembership justCreated(Boolean justCreated) {
    this.justCreated = justCreated;
    return this;
  }

  

  /**
  * optional: whether or not the record was just created on a create call (POST), i.e. was the user just added to the group, or was the user already a member
  * @return justCreated
  **/
  @Schema(example = "true", description = "optional: whether or not the record was just created on a create call (POST), i.e. was the user just added to the group, or was the user already a member")
  public Boolean isJustCreated() {
    return justCreated;
  }
  public void setJustCreated(Boolean justCreated) {
    this.justCreated = justCreated;
  }
  public GroupMembership moderator(Boolean moderator) {
    this.moderator = moderator;
    return this;
  }

  

  /**
  * Whether or not the user is a moderator of the group (the must also be an active member of the group to moderate)
  * @return moderator
  **/
  @Schema(example = "true", description = "Whether or not the user is a moderator of the group (the must also be an active member of the group to moderate)")
  public Boolean isModerator() {
    return moderator;
  }
  public void setModerator(Boolean moderator) {
    this.moderator = moderator;
  }
  public GroupMembership sisImportId(Integer sisImportId) {
    this.sisImportId = sisImportId;
    return this;
  }

  

  /**
  * The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.
  * @return sisImportId
  **/
  @Schema(example = "4", description = "The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.")
  public Integer getSisImportId() {
    return sisImportId;
  }
  public void setSisImportId(Integer sisImportId) {
    this.sisImportId = sisImportId;
  }
  public GroupMembership userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  

  /**
  * The id of the user object to which the membership belongs
  * @return userId
  **/
  @Schema(example = "3", description = "The id of the user object to which the membership belongs")
  public Integer getUserId() {
    return userId;
  }
  public void setUserId(Integer userId) {
    this.userId = userId;
  }
  public GroupMembership workflowState(String workflowState) {
    this.workflowState = workflowState;
    return this;
  }

  

  /**
  * The current state of the membership. Current possible values are &#x27;accepted&#x27;, &#x27;invited&#x27;, and &#x27;requested&#x27;
  * @return workflowState
  **/
  @Schema(example = "accepted", description = "The current state of the membership. Current possible values are 'accepted', 'invited', and 'requested'")
  public String getWorkflowState() {
    return workflowState;
  }
  public void setWorkflowState(String workflowState) {
    this.workflowState = workflowState;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupMembership groupMembership = (GroupMembership) o;
    return Objects.equals(this.groupId, groupMembership.groupId) &&
        Objects.equals(this.id, groupMembership.id) &&
        Objects.equals(this.justCreated, groupMembership.justCreated) &&
        Objects.equals(this.moderator, groupMembership.moderator) &&
        Objects.equals(this.sisImportId, groupMembership.sisImportId) &&
        Objects.equals(this.userId, groupMembership.userId) &&
        Objects.equals(this.workflowState, groupMembership.workflowState);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(groupId, id, justCreated, moderator, sisImportId, userId, workflowState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupMembership {\n");
    
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    justCreated: ").append(toIndentedString(justCreated)).append("\n");
    sb.append("    moderator: ").append(toIndentedString(moderator)).append("\n");
    sb.append("    sisImportId: ").append(toIndentedString(sisImportId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    workflowState: ").append(toIndentedString(workflowState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
