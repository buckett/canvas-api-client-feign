/*
 * canvas.instructure.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.instructure.canvas.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.instructure.canvas.model.SisImportCounts;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * SisImportData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2018-11-06T15:34:49.014533Z[Europe/London]")
public class SisImportData {

  @JsonProperty("counts")

  private SisImportCounts counts = null;

  @JsonProperty("import_type")

  private String importType = null;

  @JsonProperty("supplied_batches")

  private List<String> suppliedBatches = null;
  public SisImportData counts(SisImportCounts counts) {
    this.counts = counts;
    return this;
  }

  

  /**
  * Get counts
  * @return counts
  **/
  @Schema(description = "")
  public SisImportCounts getCounts() {
    return counts;
  }
  public void setCounts(SisImportCounts counts) {
    this.counts = counts;
  }
  public SisImportData importType(String importType) {
    this.importType = importType;
    return this;
  }

  

  /**
  * The type of SIS import
  * @return importType
  **/
  @Schema(example = "instructure_csv", description = "The type of SIS import")
  public String getImportType() {
    return importType;
  }
  public void setImportType(String importType) {
    this.importType = importType;
  }
  public SisImportData suppliedBatches(List<String> suppliedBatches) {
    this.suppliedBatches = suppliedBatches;
    return this;
  }

  public SisImportData addSuppliedBatchesItem(String suppliedBatchesItem) {
    if (this.suppliedBatches == null) {
      this.suppliedBatches = new ArrayList<String>();
    }
    this.suppliedBatches.add(suppliedBatchesItem);
    return this;
  }

  /**
  * Which files were included in the SIS import
  * @return suppliedBatches
  **/
  @Schema(example = "[term, course, section, user, enrollment]", description = "Which files were included in the SIS import")
  public List<String> getSuppliedBatches() {
    return suppliedBatches;
  }
  public void setSuppliedBatches(List<String> suppliedBatches) {
    this.suppliedBatches = suppliedBatches;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SisImportData sisImportData = (SisImportData) o;
    return Objects.equals(this.counts, sisImportData.counts) &&
        Objects.equals(this.importType, sisImportData.importType) &&
        Objects.equals(this.suppliedBatches, sisImportData.suppliedBatches);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(counts, importType, suppliedBatches);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SisImportData {\n");
    
    sb.append("    counts: ").append(toIndentedString(counts)).append("\n");
    sb.append("    importType: ").append(toIndentedString(importType)).append("\n");
    sb.append("    suppliedBatches: ").append(toIndentedString(suppliedBatches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
